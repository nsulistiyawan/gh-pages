{
    "version": "https://jsonfeed.org/version/1",
    "title": "nsulistiyawan.github.io",
    "description": "",
    "home_page_url": "https://nsulistiyawan.github.io",
    "feed_url": "https://nsulistiyawan.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Neno Sulistiyawan"
    },
    "items": [
        {
            "id": "https://nsulistiyawan.github.io/simulate-timezone-in-chrome-browser.html",
            "url": "https://nsulistiyawan.github.io/simulate-timezone-in-chrome-browser.html",
            "title": "Simulate Different Timezone in Chrome Browser",
            "summary": "When your web app are used by users in a multiple timezone, you might need to simulate the timezone, when testing a specific feature, or when you need to reproduce a bug How to do that? Fortunately, we can simulate that directly in Chrome: 1.",
            "content_html": "<p>When your web app are used by users in a multiple timezone, you might need to simulate the timezone, when testing a specific feature, or when you need to reproduce a bug </p>\n<p>How to do that? Fortunately, we can simulate that directly in Chrome: <br><br><strong>1. Open Developer Tools -&gt; Open Hamburger Menu -&gt; More Tools -&gt; Sensors</strong></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/25/step-1-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-2xl.png 1600w\"  alt=\"\" width=\"1042\" height=\"758\"></figure>\n<p><br><br><strong>2. Open Sensors</strong><br><br>On the first time, Sensors menu can be show at the bottom part of the developer tools, if that happened, right click on the Sensors -&gt; Move to Top <br><br>We can see the Sensors menu after that in Developer Tools toolbar</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/25/step-2-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-2xl.png 1600w\"  alt=\"\" width=\"1808\" height=\"1415\"></figure>\n<p><strong>3. Change the Location <br></strong>You can also add a new Location by clicking Manage button</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/25/step-3.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-2xl.png 1600w\"  alt=\"\" width=\"1154\" height=\"1192\"></figure><br><strong><br>4. Test the results<br></strong>Open developer tools console tab, type <br><code>console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)</code><br>to check the current browser timezone. <br><br>You can see that i change the timezone multiple time, the changes will be applied instantly</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/25/step-4-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-2xl.png 1600w\"  alt=\"\" width=\"1053\" height=\"684\"></figure>\n<p><br>That's all! </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-04-10T18:48:44+07:00",
            "date_modified": "2022-04-10T21:39:45+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/fix-failed-to-load-docker-configuration-docker-features-json-input-output-error.html",
            "url": "https://nsulistiyawan.github.io/fix-failed-to-load-docker-configuration-docker-features-json-input-output-error.html",
            "title": "WSL2 - Docker: Failed to load docker configuration docker features json input output error",
            "summary": "When doing development on (my backup) Windows PC, using Docker Desktop + WSL2 Integration, i found that sometimes i cannot call docker compose command Failed to load docker configuration: open /home/nsulistiyawan/.docker/features.json: input/output error That could be a bug in Docker Desktop for Windows, seems that&hellip;",
            "content_html": "<p>When doing development on (my backup) Windows PC, using Docker Desktop + WSL2 Integration, i found that sometimes i cannot call  <code>docker compose</code><br>command</p>\n<pre class=\"copy-codeblocks\"><code class=\"hljs lua\">Failed to <span class=\"hljs-built_in\">load</span> docker configuration: <span class=\"hljs-built_in\">open</span> /home/nsulistiyawan/.docker/features.json: <span class=\"hljs-built_in\">input</span>/<span class=\"hljs-built_in\">output</span> <span class=\"hljs-built_in\">error</span></code></pre>\n<p>That could be a bug in Docker Desktop for Windows, seems that the process stopped after we logged-off from user session, i'm not really sure.<br><br>So, how to fix that ? just open Windows Powershell, and type<br><br><code>wsl --shutdown<br><br> wsl</code></p>\n<p>That's all!<br><br></p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-03-24T11:57:39+07:00",
            "date_modified": "2022-03-24T12:31:26+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/daylight-saving-time-utc-offset-gcal-addon.html",
            "url": "https://nsulistiyawan.github.io/daylight-saving-time-utc-offset-gcal-addon.html",
            "title": "Daylight Saving Time, UTC Offset, US Timezones",
            "summary": " Last week, 03/11/2022, some of our users reported that newly create booking in our studio booking app are shifted by one hour. Weirdly, there are no release in that week. After wasting some hours for debugging, i found that the problem was coming from&hellip;",
            "content_html": "<p><br>Last week, 03/11/2022, some of our users reported that newly create booking in our studio booking app are shifted by one hour. Weirdly, there are no release in that week. After wasting some hours for debugging, i found that the problem was coming from <strong>Daylight Saving Time (DST)</strong>.  <br><br>In short, in the springtime you turn your clock forward one hour and in the autumn you turn your clock back an hour. <br><br>If you use utc-offset manually to calculate the time conversion, the offset value will be shifted on specific dates, here's for example <br> <br><code>03/12/2022, UTC Offset for Los Angeles Timezone :  -8 Hours</code><br><code>03/13/2022, UTC Offset for Los Angeles Timezone :  -7 Hours<br> 11/06/2022, UTC Offset for Los Angeles Timezone :  -8 Hours </code><br><br>So, how to avoid that kind of bug?<br><br><strong>1. Avoid using utc-offset to do conversion between different timezone. </strong><br><br>If your application are written in javascript, use library like <strong>moment-timezone </strong>or <strong>luxon</strong>. That library will do the right timezone conversion for you<br><br><strong>2. If you're forced to use utc-offset</strong><strong>, calculate the utc offset based on selected datetime, not only current time</strong><br><br>In my case, it was google card service datetime picker, we need to set utc-offset  manually on the datetime picker to do timezone conversion<br><br><a href=\"https://developers.google.com/apps-script/reference/card-service/date-time-picker#setTimeZoneOffsetInMins(Integer)\" target=\"_blank\" rel=\"noopener noreferrer\">https://developers.google.com/apps-script/reference/card-service/date-time-picker#setTimeZoneOffsetInMins(Integer)</a><br><br>In that kind of scenario, instead of calculate the utc offset based on current time and current timezone<br><code>const utcOffset = moment().utfOffset()</code><br><br>use the selected datetime, and selected timezone</p>\n<div>\n<div><code>const utfOffset = moment.tz(selectedDatetime, selectedTimezone).utcOffset());</code></div>\n</div>\n<p><br>That's all. </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-03-14T21:08:35+07:00",
            "date_modified": "2022-03-14T23:24:23+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/building-google-calendar-add-ons-card-interaction.html",
            "url": "https://nsulistiyawan.github.io/building-google-calendar-add-ons-card-interaction.html",
            "title": "Building Google Calendar Add-ons (2) - Card Interaction",
            "summary": " Today, we will learn to implement basic form interaction on Google Calendar Add-ons. I assume that you have read my previous post about the basic structure on Google Calendar Add-ons (1) 1. Create Google Apps Script Project Show appsscript.json like what we have done&hellip;",
            "content_html": "<p><br>Today, we will learn to implement basic form interaction on Google Calendar Add-ons. I assume that you have read my previous post about the basic structure on <a href=\"https://nsulistiyawan.github.io/building-google-calendar-add-ons-1.html\">Google Calendar Add-ons (1)</a><br><br><strong>1. <a href=\"https://script.google.com/home/projects/create\">Create Google Apps Script Project </a></strong><br><br>Show appsscript.json  like what we have done previously, then paste the following code</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;\">{\n  <span class=\"hljs-attr\">\"timeZone\"</span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"America/New_York\"</span>,\n  <span class=\"hljs-attr\">\"dependencies\"</span>: {\n    \n  },\n  <span class=\"hljs-attr\">\"exceptionLogging\"</span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"STACKDRIVER\"</span>,\n  <span class=\"hljs-attr\">\"runtimeVersion\"</span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"V8\"</span>,\n  <span class=\"hljs-attr\">\"addOns\"</span>: {\n    <span class=\"hljs-attr\">\"calendar\"</span>: {\n      <span class=\"hljs-attr\">\"homepageTrigger\"</span>: {\n        <span class=\"hljs-attr\">\"enabled\"</span>: <span class=\"hljs-literal\" style=\"color: teal;\">true</span>,\n        <span class=\"hljs-attr\">\"runFunction\"</span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"buildHelloCalendarCard\"</span>\n      }\n    },\n    <span class=\"hljs-attr\">\"common\"</span>: {\n      <span class=\"hljs-attr\">\"name\"</span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"HelloCalendar\"</span>,\n      <span class=\"hljs-attr\">\"logoUrl\"</span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"https://www.gstatic.com/script/apps_script_1x_48dp.png\"</span>\n    }\n  }\n}</pre>\n<p><strong>2. Create  / Update Code.gs<br><br><br></strong>Create <code>Code.gs</code> in Editor (or just replace with the code below if you already have one)</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;\"><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">function</span> <span class=\"hljs-title\" style=\"color: #990000; font-weight: bold;\">buildHelloCalendarCard</span>() </span>{\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> card = CardService.newCardBuilder();\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> cardHeader = CardService.newCardHeader();\n  cardHeader.setTitle(<span class=\"hljs-string\" style=\"color: #dd1144;\">'Hello Calendar'</span>);\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> userEmail = Session.getActiveUser().getEmail();\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> emailField = CardService.newTextInput();\n  emailField.setFieldName(<span class=\"hljs-string\" style=\"color: #dd1144;\">'email'</span>).setHint(<span class=\"hljs-string\" style=\"color: #dd1144;\">'Your email'</span>).setTitle(<span class=\"hljs-string\" style=\"color: #dd1144;\">'Email'</span>).setValue(userEmail);\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> helloAction = CardService.newAction().setFunctionName(<span class=\"hljs-string\" style=\"color: #dd1144;\">'notificationCallback'</span>);\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> helloButton = CardService.newTextButton();\n  helloButton.setText(<span class=\"hljs-string\" style=\"color: #dd1144;\">'Say Hello'</span>).setOnClickAction(helloAction);\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> cardSection = CardService.newCardSection();\n  cardSection.addWidget(emailField);\n  cardSection.addWidget(helloButton);\n\n  card.addSection(cardSection);\n\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">return</span> card.build();\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">function</span> <span class=\"hljs-title\" style=\"color: #990000; font-weight: bold;\">notificationCallback</span>(<span class=\"hljs-params\">e</span>) </span>{\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> helloText = <span class=\"hljs-string\" style=\"color: #dd1144;\">'Hello '</span>+e.formInput.email\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">return</span> CardService.newActionResponseBuilder()\n      .setNotification(CardService.newNotification()\n          .setText(helloText))\n      .build();\n}</pre>\n<p>Let's dive in into the code :</p>\n<p>We can see in <code>appsscript.json</code> that we will execute <code>buildHelloCalendarCard</code> function whenever user install our extension and open the Google Calendar. <br><br>Look at this line :</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;\"><span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> userEmail = <span class=\"hljs-type\" style=\"color: #445588; font-weight: bold;\">Session</span>.getActiveUser().getEmail();</pre>\n<p>We use Google Apps Script <a href=\"https://developers.google.com/apps-script/reference/base/session#getactiveuser\">session helper class</a> to get current user email, and then create a new text field with default value taken from user email. <br><br>Move on the next thing :</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;\"><span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> helloAction = CardService.newAction().setFunctionName(<span class=\"hljs-string\" style=\"color: #dd1144;\">'notificationCallback'</span>);\n\n<span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> helloButton = CardService.newTextButton();\nhelloButton.setText(<span class=\"hljs-string\" style=\"color: #dd1144;\">'Say Hello'</span>).setOnClickAction(helloAction);</pre>\n<p>We create a new  <code>Say Hello</code> button, and attach an action listener into the button. By doing that, whenever user click a <code>Say Hello</code> button, it will call <code>notificationCallback</code> function.</p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;\"><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">function</span> <span class=\"hljs-title\" style=\"color: #990000; font-weight: bold;\">notificationCallback</span><span class=\"hljs-params\">(e)</span> </span>{\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">var</span> helloText = <span class=\"hljs-string\" style=\"color: #dd1144;\">'Hello '</span>+e.formInput.email\n  <span class=\"hljs-keyword\" style=\"color: #333333; font-weight: bold;\">return</span> CardService.newActionResponseBuilder()\n      .setNotification(CardService.newNotification()\n          .setText(helloText))\n      .build();\n}</pre>\n<p>On <code>notificationCallback</code> function, we will read email input value, and then show a notification growl to current user. <br><br>You can see there's an <code>e</code> object passed in our action callback, we can see a-lot-of information from this event object. You can check <a href=\"https://developers.google.com/workspace/add-ons/concepts/event-objects\">the documentation to see all of them.</a><br><strong><br>3. Deploy, run the extension in Google Calendar</strong></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/18/display-1.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-2xl.png 1600w\"  alt=\"\" width=\"730\" height=\"434\"></figure>\n<figure class=\"post__image\">Click Say Hello<br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/18/display-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-2xl.png 1600w\"  alt=\"\" width=\"705\" height=\"358\"></figure><br><br>That's all for basic form interaction using Google App Script.</p>",
            "image": "https://nsulistiyawan.github.io/media/posts/18/display-1-2.png",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2021-03-19T18:19:37+07:00",
            "date_modified": "2021-05-01T22:41:38+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/building-google-calendar-add-ons-1.html",
            "url": "https://nsulistiyawan.github.io/building-google-calendar-add-ons-1.html",
            "title": "Building Google Calendar Add-ons (1)",
            "summary": "When building music studio management system, one of our client, a big player in music industry, asked us new feature that will simplify booking experience through Google Calendar interface. I got task to develop google calendar add-ons after that. Challenge accepted 😎 After some research&hellip;",
            "content_html": "<p>When building music studio management system, one of our client, a big player in music industry, asked us new feature that will simplify booking experience through Google Calendar interface. I got task to develop google calendar add-ons after that. <br><br><strong>Challenge accepted 😎</strong><br><br>After some research from <a href=\"https://developers.google.com/apps-script\">https://developers.google.com/apps-script</a> , I found that we can develop Google Calendar add-ons using javascript, this should make things easier.</p>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"https://media.makeameme.org/created/javascript-javascript-everywhere.jpg\" data-is-external-image=\"true\"  alt=\"Javascript Javascript everywhere - Buzz and Woody (Toy Story) Meme | Make a  Meme\"><br><br>The next problem will be documentation, there's a limited resource about Google Calendar addon's development.  So i decided to create a blog post about this, i hope it can be help for someone later.<br><br><br><strong>1. Development Environment (<a href=\"https://script.google.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://script.google.com/</a>)</strong><br><br>Google already created us development environment  to build google workspace add-ons, so can use that. <br><br>Go to <a href=\"https://script.google.com,\">https://script.google.com</a> , click New Project<br><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/17/appscript-project.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-project-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-project-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-project-md.png 768w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-project-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-project-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-project-2xl.png 1600w\"  alt=\"\" width=\"1504\" height=\"605\"></figure><br><br>Click Untitled project, rename to HelloCalendar for now<br><br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/17/appscript-rename.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-rename-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-rename-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-rename-md.png 768w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-rename-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-rename-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-rename-2xl.png 1600w\"  alt=\"\" width=\"713\" height=\"487\"></figure><br><br><strong>2. Project Manifest</strong><br><br>Project Manifest is a json file that specify project information, there's a lot of information that we can add to manifest, you can see all of the options here <br><a href=\"https://developers.google.com/apps-script/manifest\">https://developers.google.com/apps-script/manifest</a> <br><br>The project manifest is hidden by default, to show these file :<br>Click<strong> Project Settings</strong> -&gt; Check <strong>Show \"appsscript.json\" manifest file in editor</strong></p>\n<p>We can see <strong>appsscript.json</strong> in editor after that.<br><br><strong>3. Basic Application<br><br></strong>We want to extend Google Calendar functionality, we will need to make changes to <strong>appsscript.json</strong> into </p>\n<div>\n<div>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff; padding: 0.5em; color: #333333; overflow-x: auto;\">{\n   <span class=\"hljs-attr\" style=\"color: #795da3;\">\"timeZone\"</span>:<span class=\"hljs-string\" style=\"color: #df5000;\">\"America/New_York\"</span>,\n   <span class=\"hljs-attr\" style=\"color: #795da3;\">\"dependencies\"</span>:{\n      \n   },\n   <span class=\"hljs-attr\" style=\"color: #795da3;\">\"exceptionLogging\"</span>:<span class=\"hljs-string\" style=\"color: #df5000;\">\"STACKDRIVER\"</span>,\n   <span class=\"hljs-attr\" style=\"color: #795da3;\">\"runtimeVersion\"</span>:<span class=\"hljs-string\" style=\"color: #df5000;\">\"V8\"</span>,\n   <span class=\"hljs-attr\" style=\"color: #795da3;\">\"addOns\"</span>:{\n      <span class=\"hljs-attr\" style=\"color: #795da3;\">\"calendar\"</span>:{\n         <span class=\"hljs-attr\" style=\"color: #795da3;\">\"homepageTrigger\"</span>:{\n            <span class=\"hljs-attr\" style=\"color: #795da3;\">\"enabled\"</span>:<span class=\"hljs-literal\" style=\"color: #0086b3;\">true</span>,\n            <span class=\"hljs-attr\" style=\"color: #795da3;\">\"runFunction\"</span>:<span class=\"hljs-string\" style=\"color: #df5000;\">\"buildHelloCalendarCard\"</span>\n         }\n      },\n      <span class=\"hljs-attr\" style=\"color: #795da3;\">\"common\"</span>:{\n         <span class=\"hljs-attr\" style=\"color: #795da3;\">\"name\"</span>:<span class=\"hljs-string\" style=\"color: #df5000;\">\"HelloCalendar\"</span>,\n         <span class=\"hljs-attr\" style=\"color: #795da3;\">\"logoUrl\"</span>:<span class=\"hljs-string\" style=\"color: #df5000;\">\"https://www.gstatic.com/script/apps_script_1x_48dp.png\"</span>\n      }\n   }\n}</pre>\n</div>\n<div>You can see that we have added <code>addOns</code> property inside project manifest, the <code>addOns.calendar</code> part will be handle how our app behave when it's installed and a user open google calendar.<br><br>About the <code>addOns.common</code> part, i found that it's required, we cannot run the project without these configuration. Don't forget to click <strong>Save</strong> after make the changes on <strong>appsscript.json.</strong><br><br>Let's jump into code. <br><br>When user open google calendar, the function specified into <code>addOns.calendar.homepageTrigger.runFunction</code> config will be called.<br> <br>That's why, will need to build <code>buildHelloCalendarCard</code> function ( of course, you can specify a different name )<br><br><br><br>Add these function into <strong>Code.gs</strong> file.\n<div>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-function\"><span class=\"hljs-keyword\" style=\"color: #a71d5d;\">function</span> <span class=\"hljs-title\" style=\"color: #795da3;\">buildHelloCalendarCard</span>() </span>{\n    <span class=\"hljs-comment\" style=\"color: #969896;\">// build the card component</span>\n    <span class=\"hljs-keyword\" style=\"color: #a71d5d;\">var</span> card = CardService.newCardBuilder();\n\n    <span class=\"hljs-comment\" style=\"color: #969896;\">// build the card header, and set the title</span>\n    <span class=\"hljs-keyword\" style=\"color: #a71d5d;\">var</span> cardHeader = CardService.newCardHeader();\n    cardHeader.setTitle(<span class=\"hljs-string\" style=\"color: #df5000;\">'Hello Calendar'</span>);\n\n    <span class=\"hljs-comment\" style=\"color: #969896;\">// create a new text paragraph widget</span>\n    <span class=\"hljs-keyword\" style=\"color: #a71d5d;\">var</span> cardContent = CardService.newTextParagraph();\n    cardContent.setText(<span class=\"hljs-string\" style=\"color: #df5000;\">'Hello Google Calendar AddOn'</span>);\n\n    <span class=\"hljs-comment\" style=\"color: #969896;\">// each card will can have multiple section, let's add one section for now</span>\n    <span class=\"hljs-keyword\" style=\"color: #a71d5d;\">var</span> cardSection = CardService.newCardSection();\n    <span class=\"hljs-comment\" style=\"color: #969896;\">// add the paragraph widget into card section</span>\n    cardSection.addWidget(cardContent);\n\n    <span class=\"hljs-comment\" style=\"color: #969896;\">// add the section to card</span>\n    card.addSection(cardSection);\n    <span class=\"hljs-keyword\" style=\"color: #a71d5d;\">return</span> card.build();\n}</pre>\n</div>\nClick <strong>Save</strong>. Click <strong><strong>Run<br><br></strong></strong></div>\n<div>\n<div class=\"fHhrY ptNZqd\" tabindex=\"0\" role=\"listitem\" aria-label=\"Log 1. 10:21:47 PM. Notice. Execution started.\">\n<div class=\"Akkarb lNXgjb\"><code>10:21:47 PM Notice Execution started</code></div>\n</div>\n<div class=\"fHhrY ptNZqd\" tabindex=\"0\" role=\"listitem\" aria-label=\"Log 2. 10:21:47 PM. Notice. Execution completed.\">\n<div class=\"Akkarb lNXgjb\"><code>10:21:47 PM Notice Execution completed</code></div>\n</div>\n<br>You will see execution log on bottom part of editor.<br><br>In this example, i'm using apps-script card service to build user interface into our Google Calendar add-ons. <br><br><a href=\"https://developers.google.com/apps-script/reference/card-service\">https://developers.google.com/apps-script/reference/card-service</a><br><br>I think it's pretty simple, so i don't think i will need to explain the functionality.<br><br><strong>4. Test Application<br></strong><br>If the execution goes well, let's test our add on in Google Calendar.<br><br>Click <strong>Deploy</strong>, choose <strong>Test Deployment</strong>, click <strong>Install</strong><br><br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/17/appscript-install-2.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-install-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-install-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-install-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-install-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-install-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-install-2-2xl.png 1600w\"  alt=\"\" width=\"822\" height=\"641\"></figure><br><br>Go to <a href=\"https://calendar.google.com\">https://calendar.google.com</a> , click on right sidebar, you will see our add-ons already installed into our Google Calendar.<br><br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/17/appscript-calendar.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-calendar-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-calendar-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-calendar-md.png 768w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-calendar-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-calendar-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/17/responsive/appscript-calendar-2xl.png 1600w\"  alt=\"\" width=\"688\" height=\"536\"></figure><br><br>That's all for now. <br><br><br></div>\n<div> </div>\n<div> </div>\n<div> </div>\n</div>",
            "image": "https://nsulistiyawan.github.io/media/posts/17/javascript-everywhere.jpeg",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "tutorial",
                   "google workspace addon",
                   "google calendar addon"
            ],
            "date_published": "2021-03-06T21:16:12+07:00",
            "date_modified": "2021-03-07T07:31:36+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/nasruddin-hoja-dan-payung.html",
            "url": "https://nsulistiyawan.github.io/nasruddin-hoja-dan-payung.html",
            "title": "Nasruddin Hoja dan Hujan",
            "summary": "Di suatu daerah di Turki, abad ke 13, terjadi kekeringan. Orang orang yg mulai khawatir dgn paceklik panjang, kemudian menggelar shalat Istisqa untuk meminta hujan. Di akhir shalat, para jamaah (JM) meminta Nasrudin Hoja (NJ), sebagai seorang Mullah (ulama, syekh) terkenal di masanya, untuk memimpin&hellip;",
            "content_html": "<p>Di suatu daerah di Turki, abad ke 13, terjadi kekeringan. Orang orang yg mulai khawatir dgn  paceklik panjang, kemudian menggelar shalat Istisqa untuk meminta hujan.  Di akhir shalat, para jamaah (JM) meminta Nasrudin Hoja (NJ), sebagai seorang <code>Mullah</code> (ulama, syekh) terkenal di masanya, untuk memimpin doa. <br><br><code>JM : Wahai Mullah, sudikah engkau memimpin kami untuk berdoa agar hujan turun?</code><br><code>NJ : Kalian sudah benar benar yakin belum, kalau dengan doa kalian, Alloh akan menurunkan hujan?</code><br><code>JM: Tentu saja wahai Mullah. </code><br><code>NJ : Yakin?</code><br><code>JM : Insya Alloh. Kami benar benar yakin doa kami akan terkabul wahai Mullah, apalagi jika engkau yang memimpin doa. </code><br><code>NJ : Kalau kalian benar benar yakin begitu berdoa akan turun hujan, kenapa ngga ada yang bawa payung? </code><br><code>JM: 😶😶😶😶😶😶</code><br><br>Anekdot tentang Nasrudin Hoja tersebut, saya rasa menyindir kita dalam hal keyakinan. <br>Lisan bisa dengan mudah berkata dengan lantang :  <em>Saya yakin dengan kuasa Alloh</em>.  <em>Saya yakin dengan ketetapan Alloh</em>.  Namun pada akhirnya, perbuatan kita lah yang menjadi cerminan, seberapa dalam keyakinan itu ada dalam diri kita.</p>\n<p>Yakin? Sudah benar benar terpatri dalam tindakan, atau cuma berhenti di lisan?<br><br><br></p>\n<p> </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2021-02-02T23:58:33+07:00",
            "date_modified": "2021-02-03T10:21:21+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/buliding-habit-loop.html",
            "url": "https://nsulistiyawan.github.io/buliding-habit-loop.html",
            "title": "Buliding Habit Loop",
            "summary": " (╯°□°)╯︵ ┻━┻ --&gt; ᕕ(╯°□°)ᕗ ᕦ(ò_óˇ)ᕤ --&gt; ᕙ( ͡° ͜ʖ ͡°)ᕗ zzz ˘◡˘ ᶻᶻᶻ --&gt; (╯°□°)╯︵ ┻━┻ ",
            "content_html": "<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/11/habit-loop-nsulistiyawan2020-10-23.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/11/responsive/habit-loop-nsulistiyawan2020-10-23-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/11/responsive/habit-loop-nsulistiyawan2020-10-23-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/11/responsive/habit-loop-nsulistiyawan2020-10-23-md.png 768w ,https://nsulistiyawan.github.io/media/posts/11/responsive/habit-loop-nsulistiyawan2020-10-23-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/11/responsive/habit-loop-nsulistiyawan2020-10-23-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/11/responsive/habit-loop-nsulistiyawan2020-10-23-2xl.png 1600w\"  alt=\"\" width=\"1118\" height=\"638\"></figure>\n<p>(╯°□°)╯︵ ┻━┻   --&gt;  ᕕ(╯°□°)ᕗ ᕦ(ò_óˇ)ᕤ  --&gt;  ᕙ( ͡° ͜ʖ ͡°)ᕗ zzz ˘◡˘ ᶻᶻᶻ --&gt; (╯°□°)╯︵ ┻━┻</p>\n<p> </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2020-10-23T07:52:36+07:00",
            "date_modified": "2020-10-23T07:53:44+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/fix-vue-range-slider-bug-blocking-all-input.html",
            "url": "https://nsulistiyawan.github.io/fix-vue-range-slider-bug-blocking-all-input.html",
            "title": "Fix Vue Range Slider Bug - Blocking All Input ",
            "summary": "Today, when working on vue based app, i found a weird bug, all of input in a page suddenly get blocked, you cannot type into text/number/textare field, all input field. After checking previous commit, wasting 1-2 hours 🤪, finally found the source of the problem.",
            "content_html": "<p>Today, when working on vue based app,  i found a weird bug, all of input in a page suddenly get blocked, you cannot type into text/number/textare field, all input field.  <br><br>After checking previous commit, wasting 1-2 hours 🤪, finally found the source of the problem. </p>\n<p>If you're using this library <a href=\"https://github.com/xwpongithub/vue-range-slider\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/xwpongithub/vue-range-slider</a><br>That was the culprit.<br><br>Remove installed package from npm</p>\n<pre class=\"lang-js s-code-block hljs javascript\"><code><span class=\"hljs-string\">\"vue-range-component\"</span>: <span class=\"hljs-string\">\"^1.0.3\"</span>,\n</code></pre>\n<p>and the package directly from github</p>\n<div class=\"s-prose js-post-body\">\n<pre class=\"lang-js s-code-block hljs javascript\"><code><span class=\"hljs-string\">\"vue-range-component\"</span>: <span class=\"hljs-string\">\"xwpongithub/vue-range-slider\"</span>,\n</code></pre>\n</div>\n<div class=\"mt24\">\n<div class=\"grid fw-wrap ai-start jc-end gs8 gsy\"><time datetime=\"2020-08-07T22:00:12\"></time>\n<div class=\"grid--cell mr16\">The blocking fix for the library itself already merged in repository, but the owner seems not updated their package on npm. So we need to install the package directly from github.<br><br>That's all. </div>\n</div>\n</div>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2020-10-08T20:31:11+07:00",
            "date_modified": "2020-10-08T20:46:14+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/aws-ec2-open-instance-port.html",
            "url": "https://nsulistiyawan.github.io/aws-ec2-open-instance-port.html",
            "title": "AWS EC2 - Open Instance Port ",
            "summary": "<p>Here's a guide, if you want to open a specific port on AWS EC2 Instance :</p>\n",
            "content_html": "<p>Here's a guide, if you want to open a specific port on AWS EC2 Instance :</p>\n\n<p><br><strong>1.  Login to your AWS Console </strong><br><a href=\"https://console.aws.amazon.com/console/home?region=us-east-1\" target=\"_blank\" rel=\"noopener noreferrer\">    https://console.aws.amazon.com/console/home?region=us-east-1</a></p>\n<p><strong>2. Go to EC2 Console</strong><br><br><img loading=\"lazy\" src=\"https://i.imgur.com/wi2URMv.png\" data-is-external-image=\"true\" ></p>\n<p><strong>3. Click Network &amp; Security -&gt; Security Groups </strong><br><br><img loading=\"lazy\" src=\"https://i.imgur.com/ogpN2Ps.png\" data-is-external-image=\"true\" ><br><br>We can see <strong>default </strong>security group, ignore that for now. <br>Click <strong>launch-wizard-x </strong>security group name (this security group created automatically when we create ec2 instance)<br><br><strong>4. Open Detail Security Group</strong><br> <br>We can see <strong>Inbound Rules </strong>( manage incoming connection, from outside to our system ) and <strong>Outbound Rules </strong>(this will manage connection from our system to outside )<br><br><img loading=\"lazy\" src=\"https://i.imgur.com/z4dZf2D.png\" data-is-external-image=\"true\" ><br><br>We can see on my EC2 Instance, i'm allowing outside network to connect ec2 instance using port 22 (ssh), port 80 (http), and port 443 (https, not displayed on screenshot).<br><br><strong>5. Click Edit Inbound Rules -&gt; Add Rule</strong><br><br><img loading=\"lazy\" src=\"https://i.imgur.com/XJCDxrl.png\" data-is-external-image=\"true\" ><br><br>We can see alot of predefined rules here, choose one, add Source (in CIDR). If you want to allow all IP (both IPV4 and IPV6) to connect into our server, just use <code>0.0.0.0, ::/0</code><br><br>Click Save Rules<br><br><strong>6. Verify that the port  can opened from outside</strong><br><br>If you're on Linux/Unix based OS, you can use <code>nc</code><br><br>Check if port 22 opened<br><code>nc -zvw3 your-ec2-public-address 22<br></code><br>Check if port 80 opened<br><code>nc -zvw3 your-ec2-public-address 80<br></code><br>If the port opened, it will give us the following output<br><br><code>Connection to :your-ec2-public-address port :port [tcp/http] succeeded!</code><br><br>That's all!</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2020-09-19T17:08:59+07:00",
            "date_modified": "2020-09-19T18:07:02+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/tentang-rezeki-dan-bekerja.html",
            "url": "https://nsulistiyawan.github.io/tentang-rezeki-dan-bekerja.html",
            "title": "Tentang Rezeki &amp; Bekerja",
            "summary": " Percaya nggak? Kehidupan itu seimbang. Punya cara sendiri untuk mempertahankan kondisi seimbang. Dengan cara yang kadang tidak pernah kita duga. Saya percaya tidak ada daya dan upaya kita yang berakhir sia sia dalam hidup, termasuk usaha kita dalam bekerja. Jika sudah bekerja dengan maksimal,&hellip;",
            "content_html": "<figure class=\"post__image post__image--right\"><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/6/balancing-20200610.svg\" alt=\"\" width=\"169\" height=\"275\"></figure><br>Percaya nggak? <br><br>Kehidupan itu seimbang.</p>\n<p>Punya cara sendiri untuk mempertahankan kondisi seimbang. Dengan cara yang kadang tidak pernah kita duga.  Saya percaya tidak ada daya dan upaya kita yang berakhir sia sia dalam hidup, termasuk usaha kita dalam bekerja.</p>\n<blockquote>\n<p class=\"align-center\">Jika sudah bekerja dengan maksimal, namun tidak mendapatkan upah sesuai dengan yang anda lakukan, saya percaya rezeki lain akan datang, belum tentu dalam bentuk uang, bisa jadi kesempatan, kedamaian,  atau dalam bentuk lain. <br><br>Sebaliknya, jika keseriusan anda tidak sebanding dengan upah yang sudah anda terima, saya percaya, hidup akan mengambil sebagian dari rezeki Anda, entah apapun itu,  dalam bentuk yang mungkin tidak pernah kita duga, dalam waktu yang sulit kita perkirakan, sebagai kompensasi.</p>\n</blockquote>\n<p><br>You will understand once you experience them yourself :)<br><br><em>Wallahu a’lam bish-shawab.</em></p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "self-reminder",
                   "reflection"
            ],
            "date_published": "2020-06-10T14:21:24+07:00",
            "date_modified": "2020-06-13T23:49:00+07:00"
        }
    ]
}
