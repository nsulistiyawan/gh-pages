{
    "version": "https://jsonfeed.org/version/1",
    "title": "nsulistiyawan.github.io",
    "description": "",
    "home_page_url": "https://nsulistiyawan.github.io",
    "feed_url": "https://nsulistiyawan.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Neno Sulistiyawan"
    },
    "items": [
        {
            "id": "https://nsulistiyawan.github.io/tentang-rezeki-dan-bekerja.html",
            "url": "https://nsulistiyawan.github.io/tentang-rezeki-dan-bekerja.html",
            "title": "Tentang Rezeki &amp; Bekerja",
            "summary": " Percaya nggak? Kehidupan itu seimbang. Punya cara sendiri untuk mempertahankan kondisi seimbang. Dengan cara yang kadang tidak pernah kita duga. Saya percaya tidak ada daya dan upaya kita yang berakhir sia sia dalam hidup, termasuk usaha dalam bekerja. Jika sudah bekerja dengan maksimal, namun&hellip;",
            "content_html": "<p><br><img class=\"post__image post__image--right\" src=\"https://nsulistiyawan.github.io/media/posts/6/balancing-20200610.svg\" alt=\"\" width=\"169\" height=\"275\"><br>Percaya nggak? <br><br>Kehidupan itu seimbang.</p>\n<p>Punya cara sendiri untuk mempertahankan kondisi seimbang. Dengan cara yang kadang tidak pernah kita duga.  Saya percaya tidak ada daya dan upaya kita yang berakhir sia sia dalam hidup, termasuk usaha dalam bekerja.</p>\n<blockquote>\n<p>Jika sudah bekerja dengan maksimal, namun tidak mendapatkan upah sesuai dengan yang anda lakukan, saya percaya rezeki lain akan datang, belum tentu dalam bentuk uang, bisa jadi kesehatan, kedamaian,  atau dalam bentuk yang lain. <br><br>Jika sudah dibayar dengan mahal untuk suatu pekerjaan, tapi kualitas pekerjaan itu tidak sepadan, saya percaya kehidupan akan mengambil rezeki Anda sebagai kompensasi.</p>\n<p>Lagi lagi, dalam bentuk yang mungkin tidak akan pernah kita duga, dalam waktu yang sulit kita perkirakan.</p>\n</blockquote>\n<p>Bukan berarti anda berpasrah diri. Yang sepatutnya kita lakukan adalah mengusahakan yang terbaik, upaya terbaik, strategi terbaik. <br><br>Masalah hasil biar Tuhan yang menentukan :)</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "self-reminder",
                   "reflection"
            ],
            "date_published": "2020-06-10T14:21:24+07:00",
            "date_modified": "2020-06-10T16:28:17+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/jumping-to-conclusions.html",
            "url": "https://nsulistiyawan.github.io/jumping-to-conclusions.html",
            "title": "Jumping *to conclusions",
            "content_html": "<p><img class=\"post__image\" src=\"https://nsulistiyawan.github.io/media/posts/5//jumping-20200706.png\" alt=\"\" width=\"943\" height=\"871\"></p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "self-reminder",
                   "reflection"
            ],
            "date_published": "2020-06-07T21:54:40+07:00",
            "date_modified": "2020-06-07T21:54:42+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/flutter-tips-formatting-code.html",
            "url": "https://nsulistiyawan.github.io/flutter-tips-formatting-code.html",
            "title": "Flutter Tips : Formatting Code",
            "summary": "Widget based code on flutter often resulting a deep tree-shaped structure. That kind of structure. Slowly but sure. Will definitely kill you when your codebase becoming larger and larger. Fortunately flutter already give us an awesome formatter. However, the awesomeness of flutter formatter will only&hellip;",
            "content_html": "<p>Widget based code on flutter often resulting a deep tree-shaped structure. That kind of structure. <strong>Slowly but sure.</strong> <strong>Will definitely kill you</strong> when your codebase becoming larger and larger.</p>\n<p>Fortunately flutter already give us an awesome formatter. However, the awesomeness of flutter formatter will only working under 1 condition : <strong>when we use optional trailing commas. <br><br>Always add a trailing comma at the end of a parameter list in functions, methods, and constructors.</strong><br><br>For example, flutter format code will have no effect on the following codes</p>\n<pre><code>import 'package:flutter/material.dart';\n\nvoid main() =&gt; runApp(\n      MaterialApp(home: HiPage()),\n    );\n\nclass HiPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Hi();\n  }\n}\n\nclass Hi extends StatefulWidget {\n  @override\n  _HiState createState() =&gt; _HiState();\n}\n\nclass _HiState extends State {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar:\n          AppBar(title: Text('Hi Flutter'), backgroundColor: Colors.blue[900]),\n      body: Container(\n        color: Colors.blue,\n        child: Center(\n          child: Text('Hi Flutter',\n              style: TextStyle(color: Colors.white, fontSize: 50)),\n        ),\n      ),\n    );\n  }\n}</code></pre>\n<p>After some checking. You could notice that, we are missing optional trailing commas on the following lines<br><br><code>1. AppBar(title: Text('Hi Flutter'), backgroundColor: Colors.blue[900]),</code><br><br><code>2. style: TextStyle(color: Colors.white, fontSize: 50)),</code></p>\n<p>with only adding optional training commas on the following lines<br><br><code>1. AppBar(title: Text('Hi Flutter'), backgroundColor: Colors.blue[900], ),</code><br><br><code>2. style: TextStyle(color: Colors.white, fontSize: 50,),),</code><br><br>And the <strong>run the formatter,</strong> our code will be like this. </p>\n<pre><code>import 'package:flutter/material.dart';\n\nvoid main() =&gt; runApp(\n      MaterialApp(home: HiPage()),\n    );\n\nclass HiPage extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return Hi();\n  }\n}\n\nclass Hi extends StatefulWidget {\n  @override\n  _HiState createState() =&gt; _HiState();\n}\n\nclass _HiState extends State {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Hi Flutter'),\n        backgroundColor: Colors.blue[900],\n      ),\n      body: Container(\n        color: Colors.blue,\n        child: Center(\n          child: Text(\n            'Hi Flutter',\n            style: TextStyle(\n              color: Colors.white,\n              fontSize: 50,\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}</code></pre>\n<p>Neat right?   Just keep that in mind :<br><br><strong>Always add a trailing comma at the end of a parameter list in functions, methods, and constructors.</strong><br><br>That's all</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "tutorial",
                   "flutter"
            ],
            "date_published": "2020-05-30T23:09:15+07:00",
            "date_modified": "2020-05-30T23:54:56+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/jebakan-terdidik.html",
            "url": "https://nsulistiyawan.github.io/jebakan-terdidik.html",
            "title": "Jebakan Manusia Terdidik",
            "summary": "Pendidikan itu jebakan. Jikalau kita sebagai manusia terdidik, malah semakin menjauh dari realitas. Pendidikan jika tidak dipahami dan direnungkan dengan benar, sering kali malah menggiring manusia, secara perlahan, mengeksklusifkan diri dengan manusia terdidik lain. Membuat sekat sekat antara yang terdidik dengan yang dipandang kurang terdidik.",
            "content_html": "<p>Pendidikan itu jebakan. Jikalau kita sebagai manusia terdidik, malah semakin menjauh dari realitas. <br><br>Pendidikan jika tidak dipahami dan direnungkan dengan benar, sering kali malah menggiring manusia, secara perlahan, mengeksklusifkan diri dengan manusia terdidik lain.  Membuat sekat sekat antara yang terdidik dengan yang dipandang kurang terdidik. <br><br>Membentuk minoritas.  </p>\n<blockquote>\n<p>Hidup sebagai minoritas. Bergaul dengan minoritas. Saling bertukar pikiran dengan minoritas.  Lalu membahas, merundingkan, menyerukan <em>solusi</em> pada masalah yang dihadapi kaum mayoritas.<br><br></p>\n</blockquote>\n<p>Semakin terdidik harusnya semakin bijak. Semakin sadar dengan realitas.  Tidak semua orang seberuntung dirinya, dan tidak bisa memaksakan orang lain seperti dirinya.  <br><br>Pendidikan itu jebakan, jika pada akhirnya tidak bisa memberi manfaat pada manusia lain.<br><br>Tidak, saya tidak menyerang siapapun.  Saya sedang mengingatkan diri saya sendiri, yang saya rasa  sudah mulai mendekati lubang lubang jebakan.<br><br><br><br></p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "self-reminder",
                   "reflection"
            ],
            "date_published": "2020-05-28T11:32:53+07:00",
            "date_modified": "2020-05-30T01:21:39+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/karakter-dan-keadaan.html",
            "url": "https://nsulistiyawan.github.io/karakter-dan-keadaan.html",
            "title": "Tentang Karakter dan Keadaan",
            "summary": "Jikalau pujian yang meninggikan membuat seseorang lebih mudah merendahkan orang, saya rasa bukan cuma faktor pujian yang membuatnya demikian, pujian cuman menyibak tirai yg menutupi karakter asli seseorang. Jikalau harta menjadikan seseorang menjadi takabur, saya rasa bukan cuma faktor harta yang menjadikan nya demikian, harta&hellip;",
            "content_html": "<p><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">Jikalau pujian yang meninggikan membuat seseorang lebih mudah merendahkan orang, saya rasa bukan cuma faktor pujian yang membuatnya demikian, pujian cuman menyibak tirai yg menutupi karakter asli seseorang.</span></p>\n<p><span style=\"color: var(--text-editor-body-color); font-family: var(--font-base); font-size: inherit; font-weight: var(--font-weight-normal);\">Jikalau harta menjadikan seseorang menjadi takabur, saya rasa bukan cuma faktor harta yang menjadikan nya demikian, harta cuma menunjukkan karakter asli seseorang. </span></p>\n<p>Jikalau jabatan mengubah seseorang menjadi semena mena, saya rasa bukan cuma jabatan yang mengubahnya demikian, jabatan cuma mempertegas karakter asli seseorang.</p>\n<blockquote>\n<p>Keadaan tidak mengubah sifat seseorang, hal tersebut cuma mempertegas dan memperlihatkan karakter asli seseorang.</p>\n</blockquote>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "self-reminder",
                   "reflection"
            ],
            "date_published": "2020-05-24T01:00:44+07:00",
            "date_modified": "2020-05-30T01:23:15+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/expressjs-tips-cleaner-routes.html",
            "url": "https://nsulistiyawan.github.io/expressjs-tips-cleaner-routes.html",
            "title": "ExpressJS Tips: Cleaner Routes",
            "summary": "[{\"id\":1555941466744,\"type\":\"publii-paragraph\",\"content\":\"When our application become larger, it's becoming harder to maintain a huge list of routing in one file. I found that it's easier to split the routes into each own section. Here's how i do that Example Directory Layout app.js controllers routes --- index.js ---&hellip;",
            "content_html": "[{\"id\":1555941466744,\"type\":\"publii-paragraph\",\"content\":\"When our application become larger, it's becoming harder to maintain a huge list of routing in one file. I found that it's easier to split the routes into each own section.<br>Here's how i do that <br><br>Example Directory Layout<br><br><code>app.js <br>controllers<br>routes<br>--- index.js<br>--- posts.js<br>--- users.js<br></code><br><br>Example Code\",\"config\":{\"textAlign\":\"left\",\"advanced\":{\"style\":\"\",\"cssClasses\":\"\",\"id\":\"\"}}},{\"id\":1590258275961,\"type\":\"publii-paragraph\",\"content\":\"<strong>/routes/index.js</strong><strong><br></strong><code>const router = require('express').Router();<br><br>router.use('/posts',require('./posts.route'));<br>router.use('/users',require('./users.route')); <br><br>module.exports = router</code><br><br><strong>/routes/users.route.js<br></strong><code>const router = require(\\\"express\\\").Router();<br>const UsersController = require(\\\"../controllers/user.controller\\\");<br>router.get(\\\"/\\\", UserController.index);<br>module.exports = router;</code><br><br><strong>app.js<br></strong><code>//import all routes<br>app.use(\\\"/api/v1\\\", require(\\\"./src/routes/index\\\"));</code><br><br><strong>Example Endpoint Results<br></strong><code>GET /api/v1/users<br>GET /api/v1/posts <br></code><br> That's all!\",\"config\":{\"textAlign\":\"left\",\"advanced\":{\"style\":\"\",\"cssClasses\":\"\",\"id\":\"\"}}}]",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2020-01-24T01:24:00+07:00",
            "date_modified": "2020-05-24T01:27:03+07:00"
        }
    ]
}
