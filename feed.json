{
    "version": "https://jsonfeed.org/version/1",
    "title": "nsulistiyawan.github.io",
    "description": "",
    "home_page_url": "https://nsulistiyawan.github.io",
    "feed_url": "https://nsulistiyawan.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Neno Sulistiyawan"
    },
    "items": [
        {
            "id": "https://nsulistiyawan.github.io/pinescript-5-creating-an-oversold-overbought-indicator.html",
            "url": "https://nsulistiyawan.github.io/pinescript-5-creating-an-oversold-overbought-indicator.html",
            "title": "PineScript 5: Creating an Oversold / Overbought Indicator",
            "summary": "The following script will show overbought/oversold text below/top of the candle, if the current price is considered overbought/oversold based on Relative Strength Index (RSI) indicator. When stock price experiences a rapid increase over a short period, it may become overbought, indicating that a potential reversal&hellip;",
            "content_html": "<div>The following script will show overbought/oversold text below/top of the candle, if the current price is considered overbought/oversold based on Relative Strength Index (RSI) indicator.</div>\n<div> </div>\n<div>When stock price experiences a rapid increase over a short period, it may become <em>overbought</em>, indicating that <em>a potential reversal or corrective pullback could occur</em>. Conversely, when a price declines sharply, it may enter <em>oversold</em> territory, suggesting that <em>a rebound or reversal may be imminent</em>. <br><br>Traditionally, an RSI reading of 70 or above indicates an overbought situation. A reading of 30 or below indicates an oversold condition.</div>\n<pre>// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/\n    // © nsulistiyawan\n    //@version=5\n    indicator(\"RSI Overbought\", overlay = true)\n    rsiValue = ta.rsi(close, 14)\n\n    isOverSold = rsiValue &lt;= 30\n    isOverBought = rsiValue &gt;= 70\n\n    plotshape(isOverBought, 'RSI Overbought', location=location.abovebar, color=color.red, style=shape.triangledown, text= \"OB\", textcolor = color.red, size = size.tiny)\n    plotshape(isOverSold, 'RSI Oversold', location=location.belowbar, color=color.green, style=shape.triangleup, text=\"OS\", textcolor = color.green, size = size.tiny) \n  </pre>\n<p>Explanation:</p>\n<ol>\n<li>\n<p><code>indicator(\"RSI Overbought\", overlay = true)</code>: This line initializes the Pine Script indicator with the name \"RSI Overbought\" and sets it to overlay on the price chart.</p>\n</li>\n<li>\n<p><code>rsiValue = ta.rsi(close, 14)</code>: This line calculates the RSI (Relative Strength Index) value using a 14-period lookback period. The RSI measures the magnitude of recent price changes to evaluate overbought or oversold conditions.</p>\n</li>\n<li>\n<p><code>isOverSold = rsiValue &lt;= 30</code> and <code>isOverBought = rsiValue &gt;= 70</code>: These lines define boolean variables <code>isOverSold</code> and <code>isOverBought</code> based on whether the RSI value is less than or equal to 30 (oversold condition) or greater than or equal to 70 (overbought condition), respectively.</p>\n</li>\n<li>\n<p><code>plotshape()</code>: This function plots shapes on the chart based on specified conditions. In this case, it plots downward-pointing triangles (shape.triangledown) in red color above the price bars for overbought conditions, and upward-pointing triangles (shape.triangleup) in green color below the price bars for oversold conditions. The <code>text</code> parameter adds text labels \"OB\" and \"OS\" respectively to indicate overbought and oversold conditions, with corresponding text colors and sizes.</p>\n</li>\n</ol>\n<p>Results: </p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/39/HRUM_2024-04-09_14-05-36.png\" alt=\"\" width=\"2854\" height=\"1360\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/39/responsive/HRUM_2024-04-09_14-05-36-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/39/responsive/HRUM_2024-04-09_14-05-36-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/39/responsive/HRUM_2024-04-09_14-05-36-md.png 768w ,https://nsulistiyawan.github.io/media/posts/39/responsive/HRUM_2024-04-09_14-05-36-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/39/responsive/HRUM_2024-04-09_14-05-36-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/39/responsive/HRUM_2024-04-09_14-05-36-2xl.png 1600w\"></figure>\n<p> </p>\n<p>While the Relative Strength Index (RSI) is a powerful and widely used indicator in technical analysis, it's important to recognize that no single indicator can provide a comprehensive view of the market on its own. </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "tradingview",
                   "technical-analysis",
                   "pinescript"
            ],
            "date_published": "2024-04-09T13:31:13+07:00",
            "date_modified": "2024-04-09T14:13:47+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/javascript-concurrency-handling.html",
            "url": "https://nsulistiyawan.github.io/javascript-concurrency-handling.html",
            "title": "JavaScript: Concurrency Handling ",
            "summary": "Sometimes, we need to call multiple independent api call in our page, something like this : After checking the network request, we can see that the requests are running sequentially. Can we improve the code, so each request will not waiting each other? 1. Await&hellip;",
            "content_html": "<p>Sometimes, we need to call multiple independent api call in our page, something like this :</p>\n<p>\n<script src=\"https://gist.github.com/nsulistiyawan/adb1d451770633fda7f540faabbcd165.js\"></script>\n</p>\n<p>After checking the network request, we can see that the requests are running sequentially. Can we improve the code, so each request will not waiting each other? <br><br><strong>1. Await separately</strong></p>\n<p>\n<script src=\"https://gist.github.com/nsulistiyawan/42a827acd3ac8541f1f2b0a5f698b89c.js\"></script>\n</p>\n<p>The first approach is simple enough, we fire all request without await, and then await each request and handle the error. </p>\n<p>The api call will be faster. But there are some trade-offs in this approach :</p>\n<ol>\n<li><strong>No Fail-Fast</strong><br>Unfortunately, the simultaneous process will only happened in a best case scenario, if userPromise / productPromise is error, the next request will be halted until the userPromise /  productPromise complete.<br><br></li>\n<li><strong>Error Handling</strong><br>It is not possible to correctly handle errors of async parallel tasks triggered with multiple awaits. If error happened, you will get <em>UnhandledPromiseRejectionWarning</em>, and <em>PromiseRejectionHandledWarning</em>, regardless of where you use try/ catch</li>\n</ol>\n<p><br>Let's go to the next one:</p>\n<p><br><strong>2. Promise.all</strong></p>\n<div>\n<div>\n<script src=\"https://gist.github.com/nsulistiyawan/d349db26943d9a3ae403bddfe2dee1de.js\">\n\t\t\t< br >\n\t\t</script>\n</div>\n<div> </div>\n<div class=\"align-left\">Normally, <em>Promise.all </em>will act as <em>all-or-nothing</em>. There's only 2 possibilities: returning the results if all requests resolved, or return one earliest error. What if we always need all of the results, not only the error when error happened?<br><br>We can do workaround by catch statement to each promise we pass into the <em>Promise.all</em>. If any of the promises reject, they’ll be resolved through the catch statement chained to the specific promise.<br><br>However it's also have a trade-off : we need to make sure we are always providing that <em>.catch(onReject)</em> religiously, throughout our code. Which easy to miss. </div>\n</div>\n<p>Is there any better approach? Sure.<br><br><strong>3. Promise.allSettled</strong></p>\n<p>\n<script src=\"https://gist.github.com/nsulistiyawan/0247c3ef7cf8624ca96a1ad948deece4.js\"></script>\n The code above can be improved, by create a generic function to return the response or throw any error.</p>\n<p>\n<script src=\"https://gist.github.com/nsulistiyawan/639318300b3faefd4b563f236d93683f.js\"></script>\n</p>\n<p>Nicer on the eyes right? While <em>Promise.all</em> act <em>all-or-nothing</em>, <em>Promise.allSettled</em> will always return an array of objects, each of these objects further contains two properties:  status and value. <br><br>So, which solution will you prefer? or can i say, which trade-off will you choose?<br><br></p>\n<blockquote>There are no perfect solutions, there are only trade-offs; and you try to get the best trade-off you can get, that's all you can hope for.  - Thomas Sowell </blockquote>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "javascript",
                   "concurrency"
            ],
            "date_published": "2023-02-19T12:33:03+07:00",
            "date_modified": "2023-02-19T20:29:26+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/make-the-unconscious-conscious.html",
            "url": "https://nsulistiyawan.github.io/make-the-unconscious-conscious.html",
            "title": "Make the unconscious. Conscious ",
            "summary": "Until you make the unconscious conscious it will direct your life and you will call it fate. - Carl Jung Sampai saat kamu paham &amp; sadar, kebiasaan-kebiasaan buruk yg kamu lakukan secara tidak sadar, akan memimpin, mengatur jalan hidup kamu, sampai kamu akan menyebut tempat&hellip;",
            "content_html": "<p><strong>Until you make the unconscious conscious it will direct your life and you will call it fate. - Carl Jung</strong><br><br>Sampai saat kamu paham &amp; sadar, kebiasaan-kebiasaan buruk yg kamu lakukan secara tidak sadar, akan memimpin, mengatur jalan hidup kamu, sampai kamu akan menyebut tempat kamu berakhir sebagai: <strong>nasib.</strong><br><br>Dulu, saya ga pernah bisa tidur dibawah jam 1-2 malam. Night Owl. Sempat berpikir:  udah <strong>nasib</strong> kali ya? Sampai saya sadar, kebiasaan buka laptop &amp; ngopi yg terlalu malam, adalah penyebab kenapa jam tidur saya kacau.</p>\n<p>Dulu, kerjaan saya sering keteteran. Weekend sering lembur. <strong>Hustle Culture!</strong> Udah <strong>nasib</strong> kali ya? Sampai saya sadar, kebiasaan saya yg <em>slacking</em> di jam kerja + ketidakberanian saya untuk menolak request di luar <em>working hours </em>adalah penyebab busuknya management waktu saya waktu itu.<br><br>Dulu, saya nggak pernah punya hobi. Sempat berpikir: Udah <strong>nasib</strong> kali ya? Karena saya yg <em>introvert</em>. Sampai saya sadar, penyebabnya adalah jawaban saya sendiri : <em>nggak bisa</em>, <em>sori, </em><em>sibuk, </em>saat diajak teman mencoba hal hal baru lah yg menghambat saya untuk punya hobi, yg ternyata <em><strong>menyenangkan</strong></em> :)<br><em><br></em>Dulu, .... .... saya pikir itu <strong>nasib</strong>, sampai saya sadar ... .... dst dst.<br><br>Kini saya sadar. Kebiasaan kebiasaan yg tidak saya sadari, yg terbentuk bertahun tahun, ternyata lebih banyak mengarahkan saya ke <strong>nasib</strong>, daripada hal hal yang saya sadari. <br><br>Kabar baiknya, kalau kita sudah sadar,<em> conscious of the unconscious</em>, kita bisa mengarahkan kebiasaan kita menuju <strong>nasib</strong> yang lebih baik. Kabar buruknya, sadar itu baru setengah jalan, dan bikin kebiasaan yg lebih baik itu butuh waktu :)<br><br>Untuk hidup, yang penuh dengan <strong>kesadaran</strong>. <strong>Make the unconscious. Conscious.</strong> Will you?</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-09-09T19:05:30+07:00",
            "date_modified": "2022-09-10T06:48:13+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/good-luck-or-bad-luck-who-knows.html",
            "url": "https://nsulistiyawan.github.io/good-luck-or-bad-luck-who-knows.html",
            "title": "Good Luck or Bad Luck? Who Knows?",
            "summary": "There's a chinese proverb about losing horses (its called: sāi wēng lost his horse) helps keep me grounded. It's help me to maintain my perspective on life, especially when it’s kicking my ass lol.",
            "content_html": "<div class=\"\">\n<p id=\"1b21\" class=\"pw-post-title jg jh ji bn jj jk jl jm jn jo jp jq jr js jt ju jv jw jx jy jz ka kb kc kd ke gh\">There's a chinese proverb about losing horses (its called: <em style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">sāi wēng lost his horse</em>) helps keep me grounded. It's help me <span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">to maintain my perspective on life, especially when it’s kicking my ass lol.</span></p>\n</div>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/34/image_part_001.png\" alt=\"\" width=\"1920\" height=\"2560\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-md.png 768w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-2xl.png 1600w\"></figure>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/34/image_part_002.png\" alt=\"\" width=\"1920\" height=\"2560\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-md.png 768w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-2xl.png 1600w\"></figure><br>The whole process of nature is an integrated process of immense complexity, and it's really impossible to tell whether anything that happens in it is either good or bad.<br><br>Well ... thing can be seen as a good thing, but later it can be a bad one. A thing can be a bad one, but later discovered that was a good thing. <br><br>We never know, <strong>what will be the consequence of the misfortune</strong>, or <strong>what will be the consequences of the good fortune</strong>. <br><br>So, let me ask you again, is this a good luck, or the bad luck? <br><br><br></p>\n<p> </p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-08-08T12:47:27+07:00",
            "date_modified": "2022-08-08T21:36:47+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/the-great-hunger-and-the-little-hunger.html",
            "url": "https://nsulistiyawan.github.io/the-great-hunger-and-the-little-hunger.html",
            "title": "The Great Hunger &amp; The Little Hunger",
            "summary": "The Bushmen in the Kalahari Desert talk about the two hungers. There is the Great Hunger and there is the Little Hunger. The Little Hunger wants food for the belly; but the Great Hunger, the greatest hunger of all, is the hunger for meaning. There&hellip;",
            "content_html": "<figure class=\"post__image post__image--left\"><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/33/kalahari.jpeg\" alt=\"\" width=\"364\" height=\"478\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-xs.jpeg 300w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-sm.jpeg 480w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-md.jpeg 768w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-lg.jpeg 1024w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-xl.jpeg 1360w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-2xl.jpeg 1600w\"></figure> The Bushmen in the Kalahari Desert talk about the two hungers. There is the Great Hunger and there is the Little Hunger.<br><br>The Little Hunger wants food for the belly; but the Great Hunger, the greatest hunger of all, is the hunger for meaning.<br><br>There is ultimately only one thing that makes human beings deeply and profoundly bitter, and that is to have thrust upon them a life without meaning.<br><br>There is nothing wrong in searching for happiness. But of far more comfort to the soul is something greater than happiness or unhappiness, and that is meaning.</p>\n<p>Because meaning transfigures all. Once what you are doing has for you meaning, it is irrelevant whether you're happy or unhappy. You are content - you are not alone in your spirit - you belong.</p>\n<p>The Lost World of the Kalahari - Laurens van der Post</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-07-26T06:57:39+07:00",
            "date_modified": "2022-07-26T08:49:05+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/aws-s3-bucket-permissions-for-filefolder-management.html",
            "url": "https://nsulistiyawan.github.io/aws-s3-bucket-permissions-for-filefolder-management.html",
            "title": "AWS S3 : Bucket Permissions for File/Folder Management",
            "summary": "Here's a quick bucket configuration to allow file/folders or objects (in AWS S3 terms) when u're developing api for File/Folder Management features using AWS S3 as File Storage. { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"AWS\": \"arn:aws:iam::your-arn-number:user/your-arn-user\" }, \"Action\": [ \"s3:ListBucket\", \"s3:GetObject\",&hellip;",
            "content_html": "<p>Here's a quick bucket configuration to allow file/folders or objects (in AWS S3 terms) when u're developing api for File/Folder Management features using AWS S3 as File Storage.</p>\n<pre>{<br>    \"Version\": \"2012-10-17\",<br>    \"Statement\": [<br>        {<br>            \"Effect\": \"Allow\",<br>            \"Principal\": {<br>                \"AWS\": \"arn:aws:iam::your-arn-number:user/your-arn-user\"<br>            },<br>            \"Action\": [<br>                \"s3:ListBucket\", <br>                \"s3:GetObject\",<br>                \"s3:DeleteObject\",<br>                \"s3:GetObjectAcl\",<br>                \"s3:PutObjectAcl\",<br>                \"s3:PutObject\"<br>            ],<br>            \"Resource\": [<br>                \"arn:aws:s3:::your-bucket-name\",<br>                \"arn:aws:s3:::your-bucket-name/*\"<br>            ]<br>        }<br>    ]<br>}</pre>\n<p>The configuration above will allow any file/folder operations : list/create/delete/update/move inside the AWS S3 bucket,  also enable Access Control List ( set object visibility to private/public/etc ) Operations for specific AWS S3 Object.<br><br>That's all!</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "s3",
                   "aws"
            ],
            "date_published": "2022-07-17T21:41:09+07:00",
            "date_modified": "2022-07-17T22:11:50+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/react-native-navigation-bottom-tab.html",
            "url": "https://nsulistiyawan.github.io/react-native-navigation-bottom-tab.html",
            "title": "React-Native Navigation: Custom Middle Button",
            "summary": "When toying with react-native dan react-navigation, i will need to implement the following bottom tab navigation design: Here's my documentation to implement the design into react native application: 1. Icons For the icons, i use the react-native-vector-icons. There are mutiple icon-sets available built into that&hellip;",
            "content_html": "<p>When toying with react-native dan <a href=\"https://reactnavigation.org/docs/bottom-tab-navigator\">react-navigation</a>, i will need to implement the following bottom tab navigation design: </p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/31/IMG_9218-2.PNG\" alt=\"\" width=\"500\" height=\"199\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-xs.PNG 300w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-sm.PNG 480w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-md.PNG 768w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-lg.PNG 1024w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-xl.PNG 1360w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-2xl.PNG 1600w\"></figure>\n<p><br>Here's my documentation to implement the design into react native application:<br><br><strong>1. Icons</strong></p>\n<p>For the icons, i use the <a href=\"https://github.com/oblador/react-native-vector-icons\">react-native-vector-icons.</a> There are mutiple icon-sets available built into that package : font-awesome, ionicons, or the one that i will use: materialdesignicons (6.997 icons available). <br><br>For material design icons, we can see a list of the icons here <a href=\"https://materialdesignicons.com/\">https://materialdesignicons.com/</a><br><br>Using react-vector-icons in react-native itself is easy and straightforward, just install the package, import the component, and display according to the icon name.</p>\n<pre>// import the component\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\n\n// display as icon\n&lt;MaterialCommunityIconsname=\"chart-arc\" size={32} /&gt;    \n</pre>\n<p><br>2. Tab Navigation<br><br>Please make sure that you follow the installation guide described in <a href=\"https://reactnavigation.org/docs/getting-started\">react-navigation installation page</a>.<br><br>There's a multiple way we can display navigation in react native, but tab navigation is what i need for the design above.  We can just follow <a href=\"the guide in this page\">the guide in this page</a>.</p>\n<p>Here's example how we can utilize react-navigation tab bar combined with react-native-icon.</p>\n<div>\n<div style=\"overflow: hidden; background: #212121; border: 1px solid var(--color-border); border-radius: 4px; height: 505px; width: 100%;\" data-snack-id=\"@nsulistiyawan/basic-tab-navigation\" data-snack-platform=\"web\" data-snack-preview=\"true\" data-snack-theme=\"dark\"> </div>\n<script async=\"\" src=\"https://snack.expo.dev/embed.js\"></script>\n</div>\n<p>3. Custom Tab Middle Button<br><br>From documentation and like what we do previously, we can see that we can display a react component as icon<br><a href=\"https://reactnavigation.org/docs/bottom-tab-navigator#tabbar\">https://reactnavigation.org/docs/bottom-tab-navigator#tabbar</a></p>\n<p>That was the clue we need. Just render a view larger than other tab button.<br><br></p>\n<div>\n<div style=\"overflow: hidden; background: #212121; border: 1px solid var(--color-border); border-radius: 4px; height: 505px; width: 100%;\" data-snack-id=\"@nsulistiyawan/custom-middle-tab-navigation\" data-snack-platform=\"web\" data-snack-preview=\"true\" data-snack-theme=\"dark\"> </div>\n<script async=\"\" src=\"https://snack.expo.dev/embed.js\"></script>\n</div>\n<div><br><br>That's all!</div>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
            ],
            "date_published": "2022-07-10T17:30:22+07:00",
            "date_modified": "2022-07-10T19:21:40+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/serverless-use-custom-layer-in-aws-lambda.html",
            "url": "https://nsulistiyawan.github.io/serverless-use-custom-layer-in-aws-lambda.html",
            "title": "Serverless: Use Custom Layer in AWS Lambda",
            "summary": "After deploy our custom layer in AWS Lambda, we can to use that layer in our AWS Lambda functions. How to do that? Here's my step by step example reusing AWS Lambda layer when develop AWS Lambda functions using Serverless Framework: The Layer ARN Info&hellip;",
            "content_html": "<p>After deploy <a href=\"https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html\" target=\"_blank\" rel=\"noopener noreferrer\">our custom layer in AWS Lambda</a>, we can to use that layer in our AWS Lambda functions. How to do that?<br><br>Here's my step by step example reusing AWS Lambda layer when develop AWS Lambda functions using <a href=\"https://www.serverless.com/\">Serverless Framework</a>:</p>\n<h6>1. Get the ARN Info of the Layer</h6>\n<p>The Layer ARN Info will be in this format<br><code>arn:aws:lambda:aws-region:random-number:layer:audiowaveform:1</code></p>\n<h6>2. Add Layer (ARN Info) in your serverless.yml</h6>\n<figure class=\"post__image\">Create a new serverless project, you can check <a href=\"https://nsulistiyawan.github.io/nodejs-aws-lambda.html\" target=\"null\">my previous post for it.</a>  Open serverless.yml, add <code>layers</code> info inside the functions, here's the example.<br><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/30/serverless-1.png\" alt=\"\" width=\"500\" height=\"277\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-2xl.png 1600w\"></figure>\n<p>You can add multiple layers for each AWS Lambda functions. </p>\n<h6>3. Test Custom Layer</h6>\n<p><br>Every binary added to AWS Lambda will be added to <code>/opt</code> path. So in my case, the <code>audiowaveform</code> binary path will be <code>/opt/audiowaveform</code><br><br>You can see the example in my handler.js. It will try to find the version of <code>/opt/audiowaveform</code> binary in our custom layer.<br><br>Don't forget to run <code>sls deploy</code> after make a changes.</p>\n<pre>'use strict';\n\nconst { execSync } = require('child_process');\n\nmodule.exports.hello = async (event) =&gt; {\n\n  const audioWaveVersion = execSync('/opt/audiowaveform -v').toString();\n  return {\n    statusCode: 200,\n    body: JSON.stringify(\n      {\n        audioWaveVersion: audioWaveVersion\n      }\n    ),\n  };<br>\n};</pre>\n<figure class=\"post__image\">We can see that our <code>audiowaveform</code> binary executed normally. <br><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/30/audiowave.png\" alt=\"\" width=\"800\" height=\"60\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-md.png 768w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-2xl.png 1600w\"></figure><br><br>That's all!</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "serverless",
                   "nodejs",
                   "aws-lambda",
                   "aws",
                   "audiowaveform"
            ],
            "date_published": "2022-06-08T06:52:17+07:00",
            "date_modified": "2022-06-08T08:35:50+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html",
            "url": "https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html",
            "title": "Serverless:  Create Audiowaveform Layer in AWS Lambda",
            "summary": "If you have access to your own server, installing any software will be easy-peasy, but how to install and use custom binary/library in your AWS Lambda? In my case, i will need to install and use audiowaveform library (https://github.com/bbc/audiowaveform) in my AWS Lambda function. Here's&hellip;",
            "content_html": "<p>If you have access to your own server, installing any software will be easy-peasy, but how to install and use custom binary/library in your AWS Lambda? <br><br>In my case, i will need to install and use audiowaveform library (<a href=\"https://github.com/bbc/audiowaveform\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/bbc/audiowaveform</a>) in my AWS Lambda function. <br><br>Here's my documentation for that. </p>\n<h6>1. Build audiowaveform library</h6>\n<figure class=\"post__image\">First, we will need to make sure that our binary are running in AWS Lambda Linux runtime, so we will need to build the audiowaveform to run in AWS Lambda Linux. <br><br>Fortunately, someone already create that, so we can just run some code to compile a static library we need. <br><br>Please note that you will need to install <code>docker</code> and <code>nodejs</code> to run the command below<br><br><code>git clone git@github.com:reelcrafter/audiotool-builders.git audiotools</code><br><code>cd audiotools/audiowaveform</code><br><code>yarn build</code><br><code>yarn install</code><br><br>Behind the scene, when we run <code>yarn build</code>  (please note that it will take a lot of times) : <br><br>1. Build and run amazonlinux instance in your Docker<br>2. Install all dependencies to build audiowaveform inside amazonlinux<br>3. Build audiowaveform static binary for amazonlinux<br><br>And <code>yarn install</code> will copy your <code>audiowaveform</code> binary to <code>audiotools/audiowaveform/bin</code> folder.<br><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/29/audiowaveform1-2.png\" alt=\"\" width=\"500\" height=\"95\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-2xl.png 1600w\"></figure><br><br>Zip that <code>audiowaveform</code> file, so we will have <code>audiowaveform.zip</code></p>\n<h6>2. Create AWS Layer </h6>\n<figure class=\"post__image\">Go to AWS Lambda Layer Page -&gt;<a href=\"https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/create/layer\"> Create Layer</a><br><br><img  src=\"https://nsulistiyawan.github.io/media/posts/29/layer-3.png\" alt=\"\" width=\"500\" height=\"530\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-2xl.png 1600w\"></figure><br><br>Fill in the <strong>Name</strong> field, choose <code>audiowaveform.zip</code> on <strong>Upload</strong> button.<br><br>For <strong>Compatible architecure </strong>choose x86_64, since we use that architecture by default when building audiowaveform static library. <br><br>For <strong>Compatible runtimes </strong>you can use language that you will use in AWS Lambda functions, in my case i will use Node.js, so i will choose Node.js<br><br>Click <strong>Create</strong>, you will get the following screen<br><br><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/29/layer2.png\" alt=\"\" width=\"756\" height=\"296\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-2xl.png 1600w\"></figure><br><br></p>\n<h6>3. ARN Info</h6>\n<p>After create layer, we will get arn info, something like :<br><code>arn:aws:lambda:us-east-1:blablabla:layer:audiowaveform:2</code><br><br>That's all! Next, we will use that <code>audiowaveform</code> layer (using the arn-info) in our AWS Lambda function.<br><br></p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "serverless",
                   "nodejs",
                   "aws-lambda",
                   "aws",
                   "audiowaveform"
            ],
            "date_published": "2022-06-06T17:35:47+07:00",
            "date_modified": "2022-06-08T08:46:50+07:00"
        },
        {
            "id": "https://nsulistiyawan.github.io/nodejs-aws-lambda.html",
            "url": "https://nsulistiyawan.github.io/nodejs-aws-lambda.html",
            "title": "Serverless: APIs with Node.js and AWS Lambda",
            "summary": "Yesterday, i'm playing around with Node.js API running on AWS Lambda. By using AWS Lambda: 1. We only charged when our application accessed by user, so it'll minimize the server cost. 2. We don't need to do server maintenance, since all will be handled by&hellip;",
            "content_html": "<p>Yesterday, i'm playing around with Node.js API running on AWS Lambda. <br><br>By using AWS Lambda:  <br>1. We only charged when our application accessed by user, so it'll minimize the server cost. <br>2. We don't need to do server maintenance, since all will be handled by AWS.</p>\n<p>There are a lot of framework to help us develop serverless application, but one of the most popular one was Serverless (<a href=\"#INTERNAL_LINK#/post/null\">https://www.serverless.com</a>). <br><br>Using Serverless, we can do alot of thing faster, since serverless do a lot of things for us: one command deployment / application templates / or event local testing. <br><br>Here's my documentation when toying with Serverless &amp; AWS Lambda.</p>\n<p><strong>0. Prerequisite</strong><br><br>AWS Account, you'll need an AWS Account to create your Lambda function right?<br><br><strong>1. Installation</strong><br><br>Of course you will need to install Node.js before run the command bellow :)<br><br><code>npm install -g serverless</code></p>\n<p><strong>2. Generate Serverless Project</strong></p>\n<p>Run the command below<code><br>sls</code> /  <code>serverless</code></p>\n<p>You will be asked some questions :<br><br>Choose <code>AWS - Node.js - Starter </code></p>\n<p>Fill <code>Project Name</code></p>\n<figure class=\"post__image\">You will also asked to login into your AWS account to generate access key required to generate all of things required to make sure you code is running on AWS Lambda.<br><br><br><strong>3. Run &amp; Configure </strong><br><br>Go to you <code>Project Name</code>. You will see the following structures: <br><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/28/project-1.png\" alt=\"\" width=\"500\" height=\"307\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-2xl.png 1600w\"></figure><br><br>Run <code><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">serverless invoke --function hello</span></code> to invoice a specific function</p>\n<p><code>{</code><br><code>    \"statusCode\": 200,</code><br><code>    \"body\": \"{\\n  \\\"message\\\": \\\"Go Serverless v3.0! Your function executed successfully!\\\",\\n  \\\"input\\\": {}\\n}\"</code><br><code>}</code></p>\n<figure class=\"post__image\">If you wanna see our basic app is running in cloud with url that we can access directly, update <code>serverless.yml</code>, by adding <code>url : true</code><br><br><img loading=\"lazy\"  src=\"https://nsulistiyawan.github.io/media/posts/28/project-2.png\" alt=\"\" width=\"500\" height=\"347\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-2xl.png 1600w\"></figure>\n<div>\n<div>\n<p>Run <code>serverless deploy</code></p>\n</div>\n</div>\n<pre>Deploying aws-node-project to stage dev (us-east-1)<br><br>✔ Service deployed to stack aws-node-project-dev (72s)<br><br>endpoint: https://random-url-blabla.lambda-url.us-east-1.on.aws/<br>functions:<br>  hello: aws-node-project-dev-hello (1.4 kB)</pre>\n<p>We can do changes in <code>handler.js</code>, after do changes, we will need to run <code>serverless deploy </code> again.<br><br>That's all!</p>",
            "author": {
                "name": "Neno Sulistiyawan"
            },
            "tags": [
                   "serverless",
                   "nodejs",
                   "aws-lambda",
                   "aws"
            ],
            "date_published": "2022-05-23T07:17:48+07:00",
            "date_modified": "2022-06-08T08:46:54+07:00"
        }
    ]
}
