<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>nsulistiyawan.github.io</title>
    <link href="https://nsulistiyawan.github.io/feed.xml" rel="self" />
    <link href="https://nsulistiyawan.github.io" />
    <updated>2023-02-19T15:03:42+07:00</updated>
    <author>
        <name>Neno Sulistiyawan</name>
    </author>
    <id>https://nsulistiyawan.github.io</id>

    <entry>
        <title>JavaScript: Concurrency Handling </title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/handling-concurrent-request-in-javascrip.html"/>
        <id>https://nsulistiyawan.github.io/handling-concurrent-request-in-javascrip.html</id>

        <updated>2023-02-19T15:03:42+07:00</updated>
            <summary>
                <![CDATA[
                    Sometimes, we need to call multiple independent api call in our page, something like this : async function loadInitialData(){ //let's assume that each request will take 600ms try { const user = await fetchUser(); // run 1st const product = await fetchProduct(); // wait 600ms&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Sometimes, we need to call multiple independent api call in our page, something like this :</p>
<pre>async function loadInitialData(){<br><br>  //let's assume that each request will take 600ms   <br><br>  try {<br>    const user = await fetchUser(); // run 1st<br>    const product = await fetchProduct(); // wait 600ms for user req to run<br>    const other = await fetchOther(); // wait 600ms for product req to run<br><br>  } catch(error) {<br>    console.log(error);<br>  }<br>  <br>}</pre>
<p>After checking the network request, we can see that the requests are running sequentially. Can we improve the code, so each request will not waiting each other? <br><br><strong>1. Await separately</strong><br><br>The first approach is simple enough, we fire all request without await, and then await each request and handle the error. </p>
<pre> async function loadInitialData() {
    
    const userPromise = fetchUser();  
    const productPromise = fetchProduct();
    const otherPromise = fetchOther();
<br>    // all of them running simultaneously<br>
    try {
        const user = await userPromise;
    } catch (error) {
        console.log(error)
    }

    try {
        const product = await productPromise;
    } catch (error) {
        console.log(error)
    }

    try {
        const other = await otherPromise;
    } catch (error) {
        console.log(error)
    }

}

</pre>
<p>The api call will be faster. But there are some trade-offs in this approach :</p>
<ol>
<li>No Fail Fast<br>Unfortunately, the simultaneous process will only happened in a best case scenario, if userPromise / productPromise is error, the next request will be halted until the userPromise /  productPromise complete.<br><br></li>
<li>Error Handling<br>It is not possible to correctly handle errors of async parallel tasks triggered with multiple awaits. If error happened, you will get <em>UnhandledPromiseRejectionWarning</em>, and <em>PromiseRejectionHandledWarning</em>, regardless of where you use try/ catch</li>
</ol>
<p><br>Let's go to the next one:<br><br><strong>2. Promise.all</strong></p>
<pre><br>function onReject(err) {
    return err
}

async function loadInitialData() {
    <br>    //fire and await together
    const [user, product, other] = await Promise.all([
        fetchUser().catch(onReject),
        fetchProduct().catch(onReject)
        fetchOther().catch(onReject)
    ])

    if (user instanceof Error) {
        handleError(user)
    }
    
    if (product instanceof Error) {
        handleError(product)
    }

    if (other instanceof Error) {
        handleError(product)
    }
}
</pre>
<div>
<div>
<div class="align-left">Normally, <em>Promise.all </em>will act as <em>all-or-nothing</em>. There's only 2 possibilities: returning the results if all requests resolved, or return one earliest error. What if we always need all of the results, not only the error when error happened?<br><br>We can do workaround by catch statement to each promise we pass into the <em>Promise.all</em>. If any of the promises reject, they’ll be resolved through the catch statement chained to the specific promise.<br><br>However it's also have a trade-off : we need to make sure we are always providing that <em>.catch(onReject)</em> religiously, throughout our code. Which easy to miss. </div>
</div>
</div>
<p>Is there any better approach? Sure.<br><br><strong>3. Promise.allSettled</strong></p>
<pre>async function loadInitialData() {<br>
    // fire and await together
    const [userResult, productResult, otherResult] = <br>    await Promise.allSettled([
        fetchUser(), fetchProduct(), fetchOther()
    ])

    // process user
    if (userResult.status === 'rejected') {
        const err = userResult.reason
        handleError(err)
    } else {
        const user = userResult.value
    }

    // process product
    if (productResult.status === 'rejected') {
        const err = productResult.reason
        handleError(err)
    } else {
        const product = productResult.value
    }

    // process other
    if (otherResult.status === 'rejected') {
        const err = otherResult.reason
        handleError(err)
    } else {
        const other = otherResult.value
    }
}
 </pre>
<p>The code above can be improved, by create a generic function to return the response or throw any error.</p>
<pre>function handleResults(results) {
    const errors = results
        .filter(result =&gt; result.status === 'rejected')
        .map(result =&gt; result.reason)

    if (errors.length) {
        throw new AggregateError(errors)
    }

    return results.map(result =&gt; result.value)
}

async function loadInitialData() {<br>
    const results = await Promise.allSettled([
        fetchUser(), fetchProduct(), fetchOther()
    ]);

    try {
        const [user, product, other] = handleResults(results)
    } catch (err) {
        for (const error of err.errors) {
            handleTheError(error)
        }
    }
}
</pre>
<p>Nicer on the eyes right?<br><br>Different from <em>Promise.all </em>that act <em>all-or-nothing</em>, <em>Promise.allSettled</em> will always return an array of objects, each of these objects further contains two properties further status and value.<br><br>So, which solution will you prefer? or i can say, which trade-off will you choose?<br><br></p>
<blockquote>There are no perfect solutions, there are only trade-offs; and you try to get the best trade-off you can get, that's all you can hope for. Thomas Sowell </blockquote>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Make the unconscious. Conscious </title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/make-the-unconscious-conscious.html"/>
        <id>https://nsulistiyawan.github.io/make-the-unconscious-conscious.html</id>

        <updated>2022-09-10T06:48:13+07:00</updated>
            <summary>
                <![CDATA[
                    Until you make the unconscious conscious it will direct your life and you will call it fate. - Carl Jung Sampai saat kamu paham &amp; sadar, kebiasaan-kebiasaan buruk yg kamu lakukan secara tidak sadar, akan memimpin, mengatur jalan hidup kamu, sampai kamu akan menyebut tempat&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><strong>Until you make the unconscious conscious it will direct your life and you will call it fate. - Carl Jung</strong><br><br>Sampai saat kamu paham &amp; sadar, kebiasaan-kebiasaan buruk yg kamu lakukan secara tidak sadar, akan memimpin, mengatur jalan hidup kamu, sampai kamu akan menyebut tempat kamu berakhir sebagai: <strong>nasib.</strong><br><br>Dulu, saya ga pernah bisa tidur dibawah jam 1-2 malam. Night Owl. Sempat berpikir:  udah <strong>nasib</strong> kali ya? Sampai saya sadar, kebiasaan buka laptop &amp; ngopi yg terlalu malam, adalah penyebab kenapa jam tidur saya kacau.</p>
<p>Dulu, kerjaan saya sering keteteran. Weekend sering lembur. <strong>Hustle Culture!</strong> Udah <strong>nasib</strong> kali ya? Sampai saya sadar, kebiasaan saya yg <em>slacking</em> di jam kerja + ketidakberanian saya untuk menolak request di luar <em>working hours </em>adalah penyebab busuknya management waktu saya waktu itu.<br><br>Dulu, saya nggak pernah punya hobi. Sempat berpikir: Udah <strong>nasib</strong> kali ya? Karena saya yg <em>introvert</em>. Sampai saya sadar, penyebabnya adalah jawaban saya sendiri : <em>nggak bisa</em>, <em>sori, </em><em>sibuk, </em>saat diajak teman mencoba hal hal baru lah yg menghambat saya untuk punya hobi, yg ternyata <em><strong>menyenangkan</strong></em> :)<br><em><br></em>Dulu, .... .... saya pikir itu <strong>nasib</strong>, sampai saya sadar ... .... dst dst.<br><br>Kini saya sadar. Kebiasaan kebiasaan yg tidak saya sadari, yg terbentuk bertahun tahun, ternyata lebih banyak mengarahkan saya ke <strong>nasib</strong>, daripada hal hal yang saya sadari. <br><br>Kabar baiknya, kalau kita sudah sadar,<em> conscious of the unconscious</em>, kita bisa mengarahkan kebiasaan kita menuju <strong>nasib</strong> yang lebih baik. Kabar buruknya, sadar itu baru setengah jalan, dan bikin kebiasaan yg lebih baik itu butuh waktu :)<br><br>Untuk hidup, yang penuh dengan <strong>kesadaran</strong>. <strong>Make the unconscious. Conscious.</strong> Will you?</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Good Luck or Bad Luck? Who Knows?</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/good-luck-or-bad-luck-who-knows.html"/>
        <id>https://nsulistiyawan.github.io/good-luck-or-bad-luck-who-knows.html</id>

        <updated>2022-08-08T21:36:47+07:00</updated>
            <summary>
                <![CDATA[
                    There's a chinese proverb about losing horses (its called: sāi wēng lost his horse) helps keep me grounded. It's help me to maintain my perspective on life, especially when it’s kicking my ass lol.
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <div class="">
<p id="1b21" class="pw-post-title jg jh ji bn jj jk jl jm jn jo jp jq jr js jt ju jv jw jx jy jz ka kb kc kd ke gh">There's a chinese proverb about losing horses (its called: <em style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">sāi wēng lost his horse</em>) helps keep me grounded. It's help me <span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">to maintain my perspective on life, especially when it’s kicking my ass lol.</span></p>
</div>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/34/image_part_001.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-md.png 768w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_001-2xl.png 1600w"  alt="" width="1920" height="2560"></figure>
<figure class="post__image post__image--center"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/34/image_part_002.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-md.png 768w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/34/responsive/image_part_002-2xl.png 1600w"  alt="" width="1920" height="2560"></figure><br>The whole process of nature is an integrated process of immense complexity, and it's really impossible to tell whether anything that happens in it is either good or bad.<br><br>Well ... thing can be seen as a good thing, but later it can be a bad one. A thing can be a bad one, but later discovered that was a good thing. <br><br>We never know, <strong>what will be the consequence of the misfortune</strong>, or <strong>what will be the consequences of the good fortune</strong>. <br><br>So, let me ask you again, is this a good luck, or the bad luck? <br><br><br></p>
<p> </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>The Great Hunger &amp; The Little Hunger</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/the-great-hunger-and-the-little-hunger.html"/>
        <id>https://nsulistiyawan.github.io/the-great-hunger-and-the-little-hunger.html</id>

        <updated>2022-07-26T08:49:05+07:00</updated>
            <summary>
                <![CDATA[
                    The Bushmen in the Kalahari Desert talk about the two hungers. There is the Great Hunger and there is the Little Hunger. The Little Hunger wants food for the belly; but the Great Hunger, the greatest hunger of all, is the hunger for meaning. There&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image post__image--left"><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/33/kalahari.jpeg" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-xs.jpeg 300w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-sm.jpeg 480w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-md.jpeg 768w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-lg.jpeg 1024w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-xl.jpeg 1360w ,https://nsulistiyawan.github.io/media/posts/33/responsive/kalahari-2xl.jpeg 1600w"  alt="" width="364" height="478"></figure> The Bushmen in the Kalahari Desert talk about the two hungers. There is the Great Hunger and there is the Little Hunger.<br><br>The Little Hunger wants food for the belly; but the Great Hunger, the greatest hunger of all, is the hunger for meaning.<br><br>There is ultimately only one thing that makes human beings deeply and profoundly bitter, and that is to have thrust upon them a life without meaning.<br><br>There is nothing wrong in searching for happiness. But of far more comfort to the soul is something greater than happiness or unhappiness, and that is meaning.</p>
<p>Because meaning transfigures all. Once what you are doing has for you meaning, it is irrelevant whether you're happy or unhappy. You are content - you are not alone in your spirit - you belong.</p>
<p>The Lost World of the Kalahari - Laurens van der Post</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>AWS S3 : Bucket Permissions for File/Folder Management</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/aws-s3-bucket-permissions-for-filefolder-management.html"/>
        <id>https://nsulistiyawan.github.io/aws-s3-bucket-permissions-for-filefolder-management.html</id>
            <category term="s3"/>
            <category term="aws"/>

        <updated>2022-07-17T22:11:50+07:00</updated>
            <summary>
                <![CDATA[
                    Here's a quick bucket configuration to allow file/folders or objects (in AWS S3 terms) when u're developing api for File/Folder Management features using AWS S3 as File Storage. { "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Principal": { "AWS": "arn:aws:iam::your-arn-number:user/your-arn-user" }, "Action": [ "s3:ListBucket", "s3:GetObject",&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Here's a quick bucket configuration to allow file/folders or objects (in AWS S3 terms) when u're developing api for File/Folder Management features using AWS S3 as File Storage.</p>
<pre>{<br>    "Version": "2012-10-17",<br>    "Statement": [<br>        {<br>            "Effect": "Allow",<br>            "Principal": {<br>                "AWS": "arn:aws:iam::your-arn-number:user/your-arn-user"<br>            },<br>            "Action": [<br>                "s3:ListBucket", <br>                "s3:GetObject",<br>                "s3:DeleteObject",<br>                "s3:GetObjectAcl",<br>                "s3:PutObjectAcl",<br>                "s3:PutObject"<br>            ],<br>            "Resource": [<br>                "arn:aws:s3:::your-bucket-name",<br>                "arn:aws:s3:::your-bucket-name/*"<br>            ]<br>        }<br>    ]<br>}</pre>
<p>The configuration above will allow any file/folder operations : list/create/delete/update/move inside the AWS S3 bucket,  also enable Access Control List ( set object visibility to private/public/etc ) Operations for specific AWS S3 Object.<br><br>That's all!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>React-Native Navigation: Custom Middle Button</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/react-native-navigation-bottom-tab.html"/>
        <id>https://nsulistiyawan.github.io/react-native-navigation-bottom-tab.html</id>

        <updated>2022-07-10T19:21:40+07:00</updated>
            <summary>
                <![CDATA[
                    When toying with react-native dan react-navigation, i will need to implement the following bottom tab navigation design: Here's my documentation to implement the design into react native application: 1. Icons For the icons, i use the react-native-vector-icons. There are mutiple icon-sets available built into that&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When toying with react-native dan <a href="https://reactnavigation.org/docs/bottom-tab-navigator">react-navigation</a>, i will need to implement the following bottom tab navigation design: </p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/31/IMG_9218-2.PNG" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-xs.PNG 300w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-sm.PNG 480w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-md.PNG 768w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-lg.PNG 1024w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-xl.PNG 1360w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-2xl.PNG 1600w"  alt="" width="500" height="199"></figure>
<p><br>Here's my documentation to implement the design into react native application:<br><br><strong>1. Icons</strong></p>
<p>For the icons, i use the <a href="https://github.com/oblador/react-native-vector-icons">react-native-vector-icons.</a> There are mutiple icon-sets available built into that package : font-awesome, ionicons, or the one that i will use: materialdesignicons (6.997 icons available). <br><br>For material design icons, we can see a list of the icons here <a href="https://materialdesignicons.com/">https://materialdesignicons.com/</a><br><br>Using react-vector-icons in react-native itself is easy and straightforward, just install the package, import the component, and display according to the icon name.</p>
<pre>// import the component
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';

// display as icon
&lt;MaterialCommunityIconsname="chart-arc" size={32} /&gt;    
</pre>
<p><br>2. Tab Navigation<br><br>Please make sure that you follow the installation guide described in <a href="https://reactnavigation.org/docs/getting-started">react-navigation installation page</a>.<br><br>There's a multiple way we can display navigation in react native, but tab navigation is what i need for the design above.  We can just follow <a href="the guide in this page">the guide in this page</a>.</p>
<p>Here's example how we can utilize react-navigation tab bar combined with react-native-icon.</p>
<div>
<div style="overflow: hidden; background: #212121; border: 1px solid var(--color-border); border-radius: 4px; height: 505px; width: 100%;" data-snack-id="@nsulistiyawan/basic-tab-navigation" data-snack-platform="web" data-snack-preview="true" data-snack-theme="dark"> </div>
<script async="" src="https://snack.expo.dev/embed.js"></script>
</div>
<p>3. Custom Tab Middle Button<br><br>From documentation and like what we do previously, we can see that we can display a react component as icon<br><a href="https://reactnavigation.org/docs/bottom-tab-navigator#tabbar">https://reactnavigation.org/docs/bottom-tab-navigator#tabbar</a></p>
<p>That was the clue we need. Just render a view larger than other tab button.<br><br></p>
<div>
<div style="overflow: hidden; background: #212121; border: 1px solid var(--color-border); border-radius: 4px; height: 505px; width: 100%;" data-snack-id="@nsulistiyawan/custom-middle-tab-navigation" data-snack-platform="web" data-snack-preview="true" data-snack-theme="dark"> </div>
<script async="" src="https://snack.expo.dev/embed.js"></script>
</div>
<div><br><br>That's all!</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Serverless: Use Custom Layer in AWS Lambda</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/serverless-use-custom-layer-in-aws-lambda.html"/>
        <id>https://nsulistiyawan.github.io/serverless-use-custom-layer-in-aws-lambda.html</id>
            <category term="serverless"/>
            <category term="nodejs"/>
            <category term="aws-lambda"/>
            <category term="aws"/>
            <category term="audiowaveform"/>

        <updated>2022-06-08T08:35:50+07:00</updated>
            <summary>
                <![CDATA[
                    After deploy our custom layer in AWS Lambda, we can to use that layer in our AWS Lambda functions. How to do that? Here's my step by step example reusing AWS Lambda layer when develop AWS Lambda functions using Serverless Framework: The Layer ARN Info&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>After deploy <a href="https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html" target="_blank" rel="noopener noreferrer">our custom layer in AWS Lambda</a>, we can to use that layer in our AWS Lambda functions. How to do that?<br><br>Here's my step by step example reusing AWS Lambda layer when develop AWS Lambda functions using <a href="https://www.serverless.com/">Serverless Framework</a>:</p>
<h6>1. Get the ARN Info of the Layer</h6>
<p>The Layer ARN Info will be in this format<br><code>arn:aws:lambda:aws-region:random-number:layer:audiowaveform:1</code></p>
<h6>2. Add Layer (ARN Info) in your serverless.yml</h6>
<figure class="post__image">Create a new serverless project, you can check <a href="https://nsulistiyawan.github.io/nodejs-aws-lambda.html" target="null">my previous post for it.</a>  Open serverless.yml, add <code>layers</code> info inside the functions, here's the example.<br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/30/serverless-1.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-2xl.png 1600w"  alt="" width="500" height="277"></figure>
<p>You can add multiple layers for each AWS Lambda functions. </p>
<h6>3. Test Custom Layer</h6>
<p><br>Every binary added to AWS Lambda will be added to <code>/opt</code> path. So in my case, the <code>audiowaveform</code> binary path will be <code>/opt/audiowaveform</code><br><br>You can see the example in my handler.js. It will try to find the version of <code>/opt/audiowaveform</code> binary in our custom layer.<br><br>Don't forget to run <code>sls deploy</code> after make a changes.</p>
<pre>'use strict';

const { execSync } = require('child_process');

module.exports.hello = async (event) =&gt; {

  const audioWaveVersion = execSync('/opt/audiowaveform -v').toString();
  return {
    statusCode: 200,
    body: JSON.stringify(
      {
        audioWaveVersion: audioWaveVersion
      }
    ),
  };<br>
};</pre>
<figure class="post__image">We can see that our <code>audiowaveform</code> binary executed normally. <br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/30/audiowave.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-md.png 768w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-2xl.png 1600w"  alt="" width="800" height="60"></figure><br><br>That's all!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Serverless:  Create Audiowaveform Layer in AWS Lambda</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html"/>
        <id>https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html</id>
            <category term="serverless"/>
            <category term="nodejs"/>
            <category term="aws-lambda"/>
            <category term="aws"/>
            <category term="audiowaveform"/>

        <updated>2022-06-08T08:46:50+07:00</updated>
            <summary>
                <![CDATA[
                    If you have access to your own server, installing any software will be easy-peasy, but how to install and use custom binary/library in your AWS Lambda? In my case, i will need to install and use audiowaveform library (https://github.com/bbc/audiowaveform) in my AWS Lambda function. Here's&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>If you have access to your own server, installing any software will be easy-peasy, but how to install and use custom binary/library in your AWS Lambda? <br><br>In my case, i will need to install and use audiowaveform library (<a href="https://github.com/bbc/audiowaveform" target="_blank" rel="noopener noreferrer">https://github.com/bbc/audiowaveform</a>) in my AWS Lambda function. <br><br>Here's my documentation for that. </p>
<h6>1. Build audiowaveform library</h6>
<figure class="post__image">First, we will need to make sure that our binary are running in AWS Lambda Linux runtime, so we will need to build the audiowaveform to run in AWS Lambda Linux. <br><br>Fortunately, someone already create that, so we can just run some code to compile a static library we need. <br><br>Please note that you will need to install <code>docker</code> and <code>nodejs</code> to run the command below<br><br><code>git clone git@github.com:reelcrafter/audiotool-builders.git audiotools</code><br><code>cd audiotools/audiowaveform</code><br><code>yarn build</code><br><code>yarn install</code><br><br>Behind the scene, when we run <code>yarn build</code>  (please note that it will take a lot of times) : <br><br>1. Build and run amazonlinux instance in your Docker<br>2. Install all dependencies to build audiowaveform inside amazonlinux<br>3. Build audiowaveform static binary for amazonlinux<br><br>And <code>yarn install</code> will copy your <code>audiowaveform</code> binary to <code>audiotools/audiowaveform/bin</code> folder.<br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/29/audiowaveform1-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-2xl.png 1600w"  alt="" width="500" height="95"></figure><br><br>Zip that <code>audiowaveform</code> file, so we will have <code>audiowaveform.zip</code></p>
<h6>2. Create AWS Layer </h6>
<figure class="post__image">Go to AWS Lambda Layer Page -&gt;<a href="https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/create/layer"> Create Layer</a><br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/29/layer-3.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-2xl.png 1600w"  alt="" width="500" height="530"></figure><br><br>Fill in the <strong>Name</strong> field, choose <code>audiowaveform.zip</code> on <strong>Upload</strong> button.<br><br>For <strong>Compatible architecure </strong>choose x86_64, since we use that architecture by default when building audiowaveform static library. <br><br>For <strong>Compatible runtimes </strong>you can use language that you will use in AWS Lambda functions, in my case i will use Node.js, so i will choose Node.js<br><br>Click <strong>Create</strong>, you will get the following screen<br><br><figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/29/layer2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-2xl.png 1600w"  alt="" width="756" height="296"></figure><br><br></p>
<h6>3. ARN Info</h6>
<p>After create layer, we will get arn info, something like :<br><code>arn:aws:lambda:us-east-1:blablabla:layer:audiowaveform:2</code><br><br>That's all! Next, we will use that <code>audiowaveform</code> layer (using the arn-info) in our AWS Lambda function.<br><br></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Serverless: APIs with Node.js and AWS Lambda</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/nodejs-aws-lambda.html"/>
        <id>https://nsulistiyawan.github.io/nodejs-aws-lambda.html</id>
            <category term="serverless"/>
            <category term="nodejs"/>
            <category term="aws-lambda"/>
            <category term="aws"/>

        <updated>2022-06-08T08:46:54+07:00</updated>
            <summary>
                <![CDATA[
                    Yesterday, i'm playing around with Node.js API running on AWS Lambda. By using AWS Lambda: 1. We only charged when our application accessed by user, so it'll minimize the server cost. 2. We don't need to do server maintenance, since all will be handled by&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Yesterday, i'm playing around with Node.js API running on AWS Lambda. <br><br>By using AWS Lambda:  <br>1. We only charged when our application accessed by user, so it'll minimize the server cost. <br>2. We don't need to do server maintenance, since all will be handled by AWS.</p>
<p>There are a lot of framework to help us develop serverless application, but one of the most popular one was Serverless (<a href="#INTERNAL_LINK#/post/null">https://www.serverless.com</a>). <br><br>Using Serverless, we can do alot of thing faster, since serverless do a lot of things for us: one command deployment / application templates / or event local testing. <br><br>Here's my documentation when toying with Serverless &amp; AWS Lambda.</p>
<p><strong>0. Prerequisite</strong><br><br>AWS Account, you'll need an AWS Account to create your Lambda function right?<br><br><strong>1. Installation</strong><br><br>Of course you will need to install Node.js before run the command bellow :)<br><br><code>npm install -g serverless</code></p>
<p><strong>2. Generate Serverless Project</strong></p>
<p>Run the command below<code><br>sls</code> /  <code>serverless</code></p>
<p>You will be asked some questions :<br><br>Choose <code>AWS - Node.js - Starter </code></p>
<p>Fill <code>Project Name</code></p>
<figure class="post__image">You will also asked to login into your AWS account to generate access key required to generate all of things required to make sure you code is running on AWS Lambda.<br><br><br><strong>3. Run &amp; Configure </strong><br><br>Go to you <code>Project Name</code>. You will see the following structures: <br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/28/project-1.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-2xl.png 1600w"  alt="" width="500" height="307"></figure><br><br>Run <code><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">serverless invoke --function hello</span></code> to invoice a specific function</p>
<p><code>{</code><br><code>    "statusCode": 200,</code><br><code>    "body": "{\n  \"message\": \"Go Serverless v3.0! Your function executed successfully!\",\n  \"input\": {}\n}"</code><br><code>}</code></p>
<figure class="post__image">If you wanna see our basic app is running in cloud with url that we can access directly, update <code>serverless.yml</code>, by adding <code>url : true</code><br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/28/project-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-2xl.png 1600w"  alt="" width="500" height="347"></figure>
<div>
<div>
<p>Run <code>serverless deploy</code></p>
</div>
</div>
<pre>Deploying aws-node-project to stage dev (us-east-1)<br><br>✔ Service deployed to stack aws-node-project-dev (72s)<br><br>endpoint: https://random-url-blabla.lambda-url.us-east-1.on.aws/<br>functions:<br>  hello: aws-node-project-dev-hello (1.4 kB)</pre>
<p>We can do changes in <code>handler.js</code>, after do changes, we will need to run <code>serverless deploy </code> again.<br><br>That's all!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>iCalendar : Fix Google Calendar Doesn&#x27;t Sync</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/icalendar-fix-google-calendar-does.html"/>
        <id>https://nsulistiyawan.github.io/icalendar-fix-google-calendar-does.html</id>
            <category term="icalendar"/>
            <category term="ical"/>
            <category term="calendar"/>

        <updated>2022-05-23T07:19:04+07:00</updated>
            <summary>
                <![CDATA[
                    When develop application that generate a scheduling event, you might need to allow a user to subscribe the events in their own calendar app, could be apple calendar / windows calendar / google calendar or any other third party calendars. The easiest way to implement&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When develop application that generate a scheduling event, you might need to allow a user to subscribe the events in their own calendar app, could be apple calendar / windows calendar / google calendar or any other third party calendars.<br><br>The easiest way to implement event subscription was implementing icalendar protocol. <br><a href="https://www.rfc-editor.org/rfc/rfc5545">https://www.rfc-editor.org/rfc/rfc5545</a>. After implementation completed, seems apple/windows calendar can be synced perfectly. </p>
<p>However, some users are reported that use google calendar integration isn't really synced with our endpoint, event though any other third party calendar integration working well.<br><br>Apple/Windows calendar doing the integration by calling our icalendar endpoint in fixed time span, it's configurable in their desktop/mobile app.<br> <br>But there's no such option in Google Calendar, after do some research i found that Google Calendar crawler are rely on some properties that are missing from our existing  iCalendar endpoint:<br><br>1. Sequence Number ( <a href="https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.4">https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.4</a> )</p>
<pre class="newpage">Property Name:  SEQUENCE

   Purpose:  This property defines the revision sequence number of the
      calendar component within a sequence of revisions.

   Value Type:  INTEGER

   Property Parameters:  IANA and non-standard property parameters can
      be specified on this property.
</pre>
<p>Every time an event updated, we will need to increase a sequence of the ical event<br><br>2. Last Modified ( <a href="https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.3">https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.3</a> )</p>
<pre class="newpage"> Property Name:  LAST-MODIFIED

   Purpose:  This property specifies the date and time that the
      information associated with the calendar component was last
      revised in the calendar store.

         Note: This is analogous to the modification date and time for a
         file in the file system.

   Value Type:  DATE-TIME

   Property Parameters:  IANA and non-standard property parameters can
      be specified on this property.</pre>
<p>We will also need to update the last modified based on event last timestamp.<br><br>That's all. Google Calendar perfectly synced with iCal endpoint after that.<br><br><br></p>
            ]]>
        </content>
    </entry>
</feed>
