<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>nsulistiyawan.github.io</title>
    <link href="https://nsulistiyawan.github.io/feed.xml" rel="self" />
    <link href="https://nsulistiyawan.github.io" />
    <updated>2022-07-10T19:21:40+07:00</updated>
    <author>
        <name>Neno Sulistiyawan</name>
    </author>
    <id>https://nsulistiyawan.github.io</id>

    <entry>
        <title>React-Native Navigation: Custom Middle Button</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/react-native-navigation-bottom-tab.html"/>
        <id>https://nsulistiyawan.github.io/react-native-navigation-bottom-tab.html</id>

        <updated>2022-07-10T19:21:40+07:00</updated>
            <summary>
                <![CDATA[
                    When toying with react-native dan react-navigation, i will need to implement the following bottom tab navigation design: Here's my documentation to implement the design into react native application: 1. Icons For the icons, i use the react-native-vector-icons. There are mutiple icon-sets available built into that&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When toying with react-native dan <a href="https://reactnavigation.org/docs/bottom-tab-navigator">react-navigation</a>, i will need to implement the following bottom tab navigation design: </p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/31/IMG_9218-2.PNG" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-xs.PNG 300w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-sm.PNG 480w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-md.PNG 768w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-lg.PNG 1024w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-xl.PNG 1360w ,https://nsulistiyawan.github.io/media/posts/31/responsive/IMG_9218-2-2xl.PNG 1600w"  alt="" width="500" height="199"></figure>
<p><br>Here's my documentation to implement the design into react native application:<br><br><strong>1. Icons</strong></p>
<p>For the icons, i use the <a href="https://github.com/oblador/react-native-vector-icons">react-native-vector-icons.</a> There are mutiple icon-sets available built into that package : font-awesome, ionicons, or the one that i will use: materialdesignicons (6.997 icons available). <br><br>For material design icons, we can see a list of the icons here <a href="https://materialdesignicons.com/">https://materialdesignicons.com/</a><br><br>Using react-vector-icons in react-native itself is easy and straightforward, just install the package, import the component, and display according to the icon name.</p>
<pre>// import the component
import MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';

// display as icon
&lt;MaterialCommunityIconsname="chart-arc" size={32} /&gt;    
</pre>
<p><br>2. Tab Navigation<br><br>Please make sure that you follow the installation guide described in <a href="https://reactnavigation.org/docs/getting-started">react-navigation installation page</a>.<br><br>There's a multiple way we can display navigation in react native, but tab navigation is what i need for the design above.  We can just follow <a href="the guide in this page">the guide in this page</a>.</p>
<p>Here's example how we can utilize react-navigation tab bar combined with react-native-icon.</p>
<div>
<div style="overflow: hidden; background: #212121; border: 1px solid var(--color-border); border-radius: 4px; height: 505px; width: 100%;" data-snack-id="@nsulistiyawan/basic-tab-navigation" data-snack-platform="web" data-snack-preview="true" data-snack-theme="dark"> </div>
<script async="" src="https://snack.expo.dev/embed.js"></script>
</div>
<p>3. Custom Tab Middle Button<br><br>From documentation and like what we do previously, we can see that we can display a react component as icon<br><a href="https://reactnavigation.org/docs/bottom-tab-navigator#tabbar">https://reactnavigation.org/docs/bottom-tab-navigator#tabbar</a></p>
<p>That was the clue we need. Just render a view larger than other tab button.<br><br></p>
<div>
<div style="overflow: hidden; background: #212121; border: 1px solid var(--color-border); border-radius: 4px; height: 505px; width: 100%;" data-snack-id="@nsulistiyawan/custom-middle-tab-navigation" data-snack-platform="web" data-snack-preview="true" data-snack-theme="dark"> </div>
<script async="" src="https://snack.expo.dev/embed.js"></script>
</div>
<div><br><br>That's all!</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Serverless: Use Custom Layer in AWS Lambda</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/serverless-use-custom-layer-in-aws-lambda.html"/>
        <id>https://nsulistiyawan.github.io/serverless-use-custom-layer-in-aws-lambda.html</id>
            <category term="serverless"/>
            <category term="nodejs"/>
            <category term="aws-lambda"/>
            <category term="aws"/>
            <category term="audiowaveform"/>

        <updated>2022-06-08T08:35:50+07:00</updated>
            <summary>
                <![CDATA[
                    After deploy our custom layer in AWS Lambda, we can to use that layer in our AWS Lambda functions. How to do that? Here's my step by step example reusing AWS Lambda layer when develop AWS Lambda functions using Serverless Framework: The Layer ARN Info&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>After deploy <a href="https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html" target="_blank" rel="noopener noreferrer">our custom layer in AWS Lambda</a>, we can to use that layer in our AWS Lambda functions. How to do that?<br><br>Here's my step by step example reusing AWS Lambda layer when develop AWS Lambda functions using <a href="https://www.serverless.com/">Serverless Framework</a>:</p>
<h6>1. Get the ARN Info of the Layer</h6>
<p>The Layer ARN Info will be in this format<br><code>arn:aws:lambda:aws-region:random-number:layer:audiowaveform:1</code></p>
<h6>2. Add Layer (ARN Info) in your serverless.yml</h6>
<figure class="post__image">Create a new serverless project, you can check <a href="https://nsulistiyawan.github.io/nodejs-aws-lambda.html" target="null">my previous post for it.</a>  Open serverless.yml, add <code>layers</code> info inside the functions, here's the example.<br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/30/serverless-1.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/30/responsive/serverless-1-2xl.png 1600w"  alt="" width="500" height="277"></figure>
<p>You can add multiple layers for each AWS Lambda functions. </p>
<h6>3. Test Custom Layer</h6>
<p><br>Every binary added to AWS Lambda will be added to <code>/opt</code> path. So in my case, the <code>audiowaveform</code> binary path will be <code>/opt/audiowaveform</code><br><br>You can see the example in my handler.js. It will try to find the version of <code>/opt/audiowaveform</code> binary in our custom layer.<br><br>Don't forget to run <code>sls deploy</code> after make a changes.</p>
<pre>'use strict';

const { execSync } = require('child_process');

module.exports.hello = async (event) =&gt; {

  const audioWaveVersion = execSync('/opt/audiowaveform -v').toString();
  return {
    statusCode: 200,
    body: JSON.stringify(
      {
        audioWaveVersion: audioWaveVersion
      }
    ),
  };<br>
};</pre>
<figure class="post__image">We can see that our <code>audiowaveform</code> binary executed normally. <br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/30/audiowave.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-md.png 768w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/30/responsive/audiowave-2xl.png 1600w"  alt="" width="800" height="60"></figure><br><br>That's all!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Serverless:  Create Audiowaveform Layer in AWS Lambda</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html"/>
        <id>https://nsulistiyawan.github.io/audiowaveform-in-aws-lambda.html</id>
            <category term="serverless"/>
            <category term="nodejs"/>
            <category term="aws-lambda"/>
            <category term="aws"/>
            <category term="audiowaveform"/>

        <updated>2022-06-08T08:46:50+07:00</updated>
            <summary>
                <![CDATA[
                    If you have access to your own server, installing any software will be easy-peasy, but how to install and use custom binary/library in your AWS Lambda? In my case, i will need to install and use audiowaveform library (https://github.com/bbc/audiowaveform) in my AWS Lambda function. Here's&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>If you have access to your own server, installing any software will be easy-peasy, but how to install and use custom binary/library in your AWS Lambda? <br><br>In my case, i will need to install and use audiowaveform library (<a href="https://github.com/bbc/audiowaveform" target="_blank" rel="noopener noreferrer">https://github.com/bbc/audiowaveform</a>) in my AWS Lambda function. <br><br>Here's my documentation for that. </p>
<h6>1. Build audiowaveform library</h6>
<figure class="post__image">First, we will need to make sure that our binary are running in AWS Lambda Linux runtime, so we will need to build the audiowaveform to run in AWS Lambda Linux. <br><br>Fortunately, someone already create that, so we can just run some code to compile a static library we need. <br><br>Please note that you will need to install <code>docker</code> and <code>nodejs</code> to run the command below<br><br><code>git clone git@github.com:reelcrafter/audiotool-builders.git audiotools</code><br><code>cd audiotools/audiowaveform</code><br><code>yarn build</code><br><code>yarn install</code><br><br>Behind the scene, when we run <code>yarn build</code>  (please note that it will take a lot of times) : <br><br>1. Build and run amazonlinux instance in your Docker<br>2. Install all dependencies to build audiowaveform inside amazonlinux<br>3. Build audiowaveform static binary for amazonlinux<br><br>And <code>yarn install</code> will copy your <code>audiowaveform</code> binary to <code>audiotools/audiowaveform/bin</code> folder.<br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/29/audiowaveform1-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/audiowaveform1-2-2xl.png 1600w"  alt="" width="500" height="95"></figure><br><br>Zip that <code>audiowaveform</code> file, so we will have <code>audiowaveform.zip</code></p>
<h6>2. Create AWS Layer </h6>
<figure class="post__image">Go to AWS Lambda Layer Page -&gt;<a href="https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/create/layer"> Create Layer</a><br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/29/layer-3.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer-3-2xl.png 1600w"  alt="" width="500" height="530"></figure><br><br>Fill in the <strong>Name</strong> field, choose <code>audiowaveform.zip</code> on <strong>Upload</strong> button.<br><br>For <strong>Compatible architecure </strong>choose x86_64, since we use that architecture by default when building audiowaveform static library. <br><br>For <strong>Compatible runtimes </strong>you can use language that you will use in AWS Lambda functions, in my case i will use Node.js, so i will choose Node.js<br><br>Click <strong>Create</strong>, you will get the following screen<br><br><figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/29/layer2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/29/responsive/layer2-2xl.png 1600w"  alt="" width="756" height="296"></figure><br><br></p>
<h6>3. ARN Info</h6>
<p>After create layer, we will get arn info, something like :<br><code>arn:aws:lambda:us-east-1:blablabla:layer:audiowaveform:2</code><br><br>That's all! Next, we will use that <code>audiowaveform</code> layer (using the arn-info) in our AWS Lambda function.<br><br></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Serverless: APIs with Node.js and AWS Lambda</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/nodejs-aws-lambda.html"/>
        <id>https://nsulistiyawan.github.io/nodejs-aws-lambda.html</id>
            <category term="serverless"/>
            <category term="nodejs"/>
            <category term="aws-lambda"/>
            <category term="aws"/>

        <updated>2022-06-08T08:46:54+07:00</updated>
            <summary>
                <![CDATA[
                    Yesterday, i'm playing around with Node.js API running on AWS Lambda. By using AWS Lambda: 1. We only charged when our application accessed by user, so it'll minimize the server cost. 2. We don't need to do server maintenance, since all will be handled by&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Yesterday, i'm playing around with Node.js API running on AWS Lambda. <br><br>By using AWS Lambda:  <br>1. We only charged when our application accessed by user, so it'll minimize the server cost. <br>2. We don't need to do server maintenance, since all will be handled by AWS.</p>
<p>There are a lot of framework to help us develop serverless application, but one of the most popular one was Serverless (<a href="#INTERNAL_LINK#/post/null">https://www.serverless.com</a>). <br><br>Using Serverless, we can do alot of thing faster, since serverless do a lot of things for us: one command deployment / application templates / or event local testing. <br><br>Here's my documentation when toying with Serverless &amp; AWS Lambda.</p>
<p><strong>0. Prerequisite</strong><br><br>AWS Account, you'll need an AWS Account to create your Lambda function right?<br><br><strong>1. Installation</strong><br><br>Of course you will need to install Node.js before run the command bellow :)<br><br><code>npm install -g serverless</code></p>
<p><strong>2. Generate Serverless Project</strong></p>
<p>Run the command below<code><br>sls</code> /  <code>serverless</code></p>
<p>You will be asked some questions :<br><br>Choose <code>AWS - Node.js - Starter </code></p>
<p>Fill <code>Project Name</code></p>
<figure class="post__image">You will also asked to login into your AWS account to generate access key required to generate all of things required to make sure you code is running on AWS Lambda.<br><br><br><strong>3. Run &amp; Configure </strong><br><br>Go to you <code>Project Name</code>. You will see the following structures: <br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/28/project-1.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-1-2xl.png 1600w"  alt="" width="500" height="307"></figure><br><br>Run <code><span style="color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);">serverless invoke --function hello</span></code> to invoice a specific function</p>
<p><code>{</code><br><code>    "statusCode": 200,</code><br><code>    "body": "{\n  \"message\": \"Go Serverless v3.0! Your function executed successfully!\",\n  \"input\": {}\n}"</code><br><code>}</code></p>
<figure class="post__image">If you wanna see our basic app is running in cloud with url that we can access directly, update <code>serverless.yml</code>, by adding <code>url : true</code><br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/28/project-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/28/responsive/project-2-2xl.png 1600w"  alt="" width="500" height="347"></figure>
<div>
<div>
<p>Run <code>serverless deploy</code></p>
</div>
</div>
<pre>Deploying aws-node-project to stage dev (us-east-1)<br><br>✔ Service deployed to stack aws-node-project-dev (72s)<br><br>endpoint: https://random-url-blabla.lambda-url.us-east-1.on.aws/<br>functions:<br>  hello: aws-node-project-dev-hello (1.4 kB)</pre>
<p>We can do changes in <code>handler.js</code>, after do changes, we will need to run <code>serverless deploy </code> again.<br><br>That's all!</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>iCalendar : Fix Google Calendar Doesn&#x27;t Sync</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/icalendar-fix-google-calendar-does.html"/>
        <id>https://nsulistiyawan.github.io/icalendar-fix-google-calendar-does.html</id>
            <category term="icalendar"/>
            <category term="ical"/>
            <category term="calendar"/>

        <updated>2022-05-23T07:19:04+07:00</updated>
            <summary>
                <![CDATA[
                    When develop application that generate a scheduling event, you might need to allow a user to subscribe the events in their own calendar app, could be apple calendar / windows calendar / google calendar or any other third party calendars. The easiest way to implement&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When develop application that generate a scheduling event, you might need to allow a user to subscribe the events in their own calendar app, could be apple calendar / windows calendar / google calendar or any other third party calendars.<br><br>The easiest way to implement event subscription was implementing icalendar protocol. <br><a href="https://www.rfc-editor.org/rfc/rfc5545">https://www.rfc-editor.org/rfc/rfc5545</a>. After implementation completed, seems apple/windows calendar can be synced perfectly. </p>
<p>However, some users are reported that use google calendar integration isn't really synced with our endpoint, event though any other third party calendar integration working well.<br><br>Apple/Windows calendar doing the integration by calling our icalendar endpoint in fixed time span, it's configurable in their desktop/mobile app.<br> <br>But there's no such option in Google Calendar, after do some research i found that Google Calendar crawler are rely on some properties that are missing from our existing  iCalendar endpoint:<br><br>1. Sequence Number ( <a href="https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.4">https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.4</a> )</p>
<pre class="newpage">Property Name:  SEQUENCE

   Purpose:  This property defines the revision sequence number of the
      calendar component within a sequence of revisions.

   Value Type:  INTEGER

   Property Parameters:  IANA and non-standard property parameters can
      be specified on this property.
</pre>
<p>Every time an event updated, we will need to increase a sequence of the ical event<br><br>2. Last Modified ( <a href="https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.3">https://www.rfc-editor.org/rfc/rfc5545#section-3.8.7.3</a> )</p>
<pre class="newpage"> Property Name:  LAST-MODIFIED

   Purpose:  This property specifies the date and time that the
      information associated with the calendar component was last
      revised in the calendar store.

         Note: This is analogous to the modification date and time for a
         file in the file system.

   Value Type:  DATE-TIME

   Property Parameters:  IANA and non-standard property parameters can
      be specified on this property.</pre>
<p>We will also need to update the last modified based on event last timestamp.<br><br>That's all. Google Calendar perfectly synced with iCal endpoint after that.<br><br><br></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>React Native: Use Lottie as Splash Screen  </title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/react-native-use-lottie-as-splash-screen.html"/>
        <id>https://nsulistiyawan.github.io/react-native-use-lottie-as-splash-screen.html</id>
            <category term="react-native"/>
            <category term="lottie"/>

        <updated>2022-05-23T07:19:15+07:00</updated>
            <summary>
                <![CDATA[
                    Here's a step-by-step to setup Lottie as splash screen in React Native app Let's start by create a new project &amp; install lottie-react-native &amp; lottie-ios@3.2.3 npx react-native init splashLottie npm i --save lottie-react-native npm i --save lottie-ios@3.2.3 don't forget to do this one if youre&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>Here's a step-by-step to setup Lottie as splash screen in React Native app</p>
<div class="codeBlockContainer_CBWl language-shell theme-code-block">
<h6 class="codeBlockContent_vhl8">1. Create New React Native Project<br><br></h6>
<p>Let's start by create a new project &amp; install <code class="notranslate">lottie-react-native &amp; lottie-ios@3.2.3</code></p>
<div class="codeBlockContent_vhl8">
<div class="codeBlockContainer_CBWl language-shell theme-code-block">
<pre class="codeBlockContent_vhl8"><code class="codeBlockLines_OfWd"><span class="token-line"><span class="token plain">npx react-native init splashLottie</span></span></code></pre>
<pre><code class="notranslate">npm i --save lottie-react-native
npm i --save lottie-ios@3.2.3</code></pre>
<p>don't forget to do this one if youre gonna run the code as ios app</p>
<pre><code class="codeBlockLines_OfWd"><span class="token-line"><span class="token plain">cd ios <br></span></span></code><br>pod install</pre>
<h6>2. Cleanup Existing App.js <br><br></h6>
<p>For clarity, let's cleanup App.js, then replace the content with this one</p>
<pre>import React from 'react';
import {Text, View, StyleSheet} from 'react-native';

const App = () =&gt; {
  return (
    &lt;View style={styles.text}&gt;
      &lt;Text&gt; Hello Lottie Splash! &lt;/Text&gt;
    &lt;/View&gt;
  );
};

const styles = StyleSheet.create({
  text: {
    alignItems: 'center',
    flex: 1,
    justifyContent: 'center',
    fontWeight: 'bold',
  },
});

export default App;</pre>
<h6>3.  Download &amp; Save Lottie Files <br><br></h6>
<p>You can pick whatever lottie you like, see <a href="https://lottiefiles.com/featured">https://lottiefiles.com/featured</a> for free Lottie files. I'm gonna use this one for the splash screen :</p>
<p><a href="https://lottiefiles.com/61851-eid-al-fitr-eid-mubarak-2021">https://lottiefiles.com/61851-eid-al-fitr-eid-mubarak-2021</a><br><br>Download the lottie as json file, then save it in (you can add <code>assets</code> folder inside the project)</p>
<pre>assets/eid-mubarrak-lottie.json</pre>
<h6><br>4. Display Lottie Component in View</h6>
<p>Let's display Lottie components in our view</p>
<pre>import React from 'react';
import {Text, View, StyleSheet} from 'react-native';
import LottieView from 'lottie-react-native';

const App = () =&gt; {
  return (
    &lt;View style={styles.text}&gt;
      &lt;LottieView
        source={require('./assets/eid-mubarak-lottie.json')}
        autoPlay
        loop={false}
      /&gt;
      &lt;Text&gt; Hello Lottie Splash! &lt;/Text&gt;
    &lt;/View&gt;
  );
};

const styles = StyleSheet.create({
  text: {
    alignItems: 'center',
    flex: 1,
    justifyContent: 'center',
    fontWeight: 'bold',
  },
});

export default App;</pre>
<p><br>Run the code, here's mine when running using ios simulator</p>
<pre>npx react-native run-ios --simulator="iPhone SE (3rd generation)"</pre>
<figure class="post__image">We can see the changes in simulator. <br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/26/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/26/responsive/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/26/responsive/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/26/responsive/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25-md.png 768w ,https://nsulistiyawan.github.io/media/posts/26/responsive/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/26/responsive/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/26/responsive/Simulator-Screen-Shot-iPhone-SE-3rd-generation-2022-05-01-at-07.14.25-2xl.png 1600w"  alt="" width="250" height="445"></figure>
<p>You can see that it will display animation whenever we open the application, but we need to hide that after animation complete.</p>
<h6>5. Configure as Splash Screen</h6>
<div>
<div> </div>
<div>LottieView has <code>onAnimationFinish</code> props, the main idea : we display the lottie animation first, after animation completed, we can display our main content. <br>We can use react-hook state to accomplish this one<br><br></div>
<div>
<pre>import React, {useState} from 'react';
import {Text, View, StyleSheet} from 'react-native';
import LottieView from 'lottie-react-native';

const App = () =&gt; {
  const [lottieLoaded, setLottieLoaded] = useState(false);

  if (!lottieLoaded) {
    return (
      &lt;View style={styles.text}&gt;
        &lt;LottieView
          source={require('./assets/eid-mubarak-lottie.json')}
          autoPlay
          loop={false}
          resizeMode="contain"
          onAnimationFinish={() =&gt; {
            setLottieLoaded(true);
          }}
        /&gt;
      &lt;/View&gt;
    );
  }
  return (
    &lt;View style={styles.text}&gt;
      &lt;Text&gt; Hello Lottie Splash! &lt;/Text&gt;
    &lt;/View&gt;
  );
};

const styles = StyleSheet.create({
  text: {
    alignItems: 'center',
    flex: 1,
    justifyContent: 'center',
    fontWeight: 'bold',
  },
});

export default App;</pre>
</div>
</div>
<figure class="post__image"><br>Here's the result, it will display the lottie animation, once animation completed, it will display the main content.  <br><br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/26/Simulator-Screen-Recording-iPhone-SE-3rd-generation-2022-05-01-at-07.35.15.gif" alt="" width="360" height="640"></figure><br><br>That's all. <br><br>Happy Eid Mubarak Everyone!<br><br><br><br></p>
</div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Simulate Different Timezone in Chrome Browser</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/simulate-timezone-in-chrome-browser.html"/>
        <id>https://nsulistiyawan.github.io/simulate-timezone-in-chrome-browser.html</id>
            <category term="timezone"/>
            <category term="chrome"/>

        <updated>2022-05-23T07:19:26+07:00</updated>
            <summary>
                <![CDATA[
                    When your web app are used by users in a multiple timezone, you might need to simulate the timezone, sometimes we need that to test a specific feature, or when you need to reproduce a bug related to multiple timezone implementation How to do that?&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When your web app are used by users in a multiple timezone, you might need to simulate the timezone, sometimes we need that to test a specific feature, or when you need to reproduce a bug related to multiple timezone implementation</p>
<p>How to do that? Fortunately, we can simulate that directly in Chrome: <br><br><strong>1. Open Developer Tools -&gt; Open Hamburger Menu -&gt; More Tools -&gt; Sensors</strong></p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/25/step-1-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-1-2-2xl.png 1600w"  alt="" width="1042" height="758"></figure>
<p><br><br><strong>2. Open Sensors</strong><br>On the first time, Sensors menu can be show at the bottom part of the developer tools, if that happened, <strong>right click</strong> on the Sensors -&gt; Move to Top <br><br>We can see the Sensors menu after that in Developer Tools toolbar</p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/25/step-2-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-2-2-2xl.png 1600w"  alt="" width="1808" height="1415"></figure>
<p><strong>3. Change the Location <br></strong>You can also add a new Location by clicking Manage button</p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/25/step-3.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-3-2xl.png 1600w"  alt="" width="1154" height="1192"></figure><br><strong><br>4. Test the results<br></strong>Open developer tools console tab, type <br><code>console.log(Intl.DateTimeFormat().resolvedOptions().timeZone)</code><br>to check the current browser timezone. <br><br>You can see that when i change the timezone multiple time, it will be applied instantly</p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/25/step-4-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/25/responsive/step-4-2-2xl.png 1600w"  alt="" width="1053" height="684"></figure>
<p><br>That's all! </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>WSL2 - Docker: Failed to load docker configuration docker features json input output error</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/fix-failed-to-load-docker-configuration-docker-features-json-input-output-error.html"/>
        <id>https://nsulistiyawan.github.io/fix-failed-to-load-docker-configuration-docker-features-json-input-output-error.html</id>

        <updated>2022-03-24T12:31:26+07:00</updated>
            <summary>
                <![CDATA[
                    When doing development on (my backup) Windows PC, using Docker Desktop + WSL2 Integration, i found that sometimes i cannot call docker compose command Failed to load docker configuration: open /home/nsulistiyawan/.docker/features.json: input/output error That could be a bug in Docker Desktop for Windows, seems that&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When doing development on (my backup) Windows PC, using Docker Desktop + WSL2 Integration, i found that sometimes i cannot call  <code>docker compose</code><br>command</p>
<pre class="copy-codeblocks"><code class="hljs lua">Failed to <span class="hljs-built_in">load</span> docker configuration: <span class="hljs-built_in">open</span> /home/nsulistiyawan/.docker/features.json: <span class="hljs-built_in">input</span>/<span class="hljs-built_in">output</span> <span class="hljs-built_in">error</span></code></pre>
<p>That could be a bug in Docker Desktop for Windows, seems that the process stopped after we logged-off from user session, i'm not really sure.<br><br>So, how to fix that ? just open Windows Powershell, and type<br><br><code>wsl --shutdown<br><br> wsl</code></p>
<p>That's all!<br><br></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Daylight Saving Time, UTC Offset, US Timezones</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/daylight-saving-time-utc-offset-gcal-addon.html"/>
        <id>https://nsulistiyawan.github.io/daylight-saving-time-utc-offset-gcal-addon.html</id>

        <updated>2022-03-14T23:24:23+07:00</updated>
            <summary>
                <![CDATA[
                    Last week, 03/11/2022, some of our users reported that newly create booking in our studio booking app are shifted by one hour. Weirdly, there are no release in that week. After wasting some hours for debugging, i found that the problem was coming from Daylight&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p><br>Last week, 03/11/2022, some of our users reported that newly create booking in our studio booking app are shifted by one hour. Weirdly, there are no release in that week. After wasting some hours for debugging, i found that the problem was coming from <strong>Daylight Saving Time (DST)</strong>.  <br><br>In short, in the springtime you turn your clock forward one hour and in the autumn you turn your clock back an hour. <br><br>If you use utc-offset manually to calculate the time conversion, the offset value will be shifted on specific dates, here's for example <br> <br><code>03/12/2022, UTC Offset for Los Angeles Timezone :  -8 Hours</code><br><code>03/13/2022, UTC Offset for Los Angeles Timezone :  -7 Hours<br> 11/06/2022, UTC Offset for Los Angeles Timezone :  -8 Hours </code><br><br>So, how to avoid that kind of bug?<br><br><strong>1. Avoid using utc-offset to do conversion between different timezone. </strong><br><br>If your application are written in javascript, use library like <strong>moment-timezone </strong>or <strong>luxon</strong>. That library will do the right timezone conversion for you<br><br><strong>2. If you're forced to use utc-offset</strong><strong>, calculate the utc offset based on selected datetime, not only current time</strong><br><br>In my case, it was google card service datetime picker, we need to set utc-offset  manually on the datetime picker to do timezone conversion<br><br><a href="https://developers.google.com/apps-script/reference/card-service/date-time-picker#setTimeZoneOffsetInMins(Integer)" target="_blank" rel="noopener noreferrer">https://developers.google.com/apps-script/reference/card-service/date-time-picker#setTimeZoneOffsetInMins(Integer)</a><br><br>In that kind of scenario, instead of calculate the utc offset based on current time and current timezone<br><code>const utcOffset = moment().utfOffset()</code><br><br>use the selected datetime, and selected timezone</p>
<div>
<div><code>const utfOffset = moment.tz(selectedDatetime, selectedTimezone).utcOffset());</code></div>
</div>
<p><br>That's all. </p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Building Google Calendar Add-ons (2) - Card Interaction</title>
        <author>
            <name>Neno Sulistiyawan</name>
        </author>
        <link href="https://nsulistiyawan.github.io/building-google-calendar-add-ons-card-interaction.html"/>
        <id>https://nsulistiyawan.github.io/building-google-calendar-add-ons-card-interaction.html</id>

        <updated>2021-05-01T22:41:38+07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://nsulistiyawan.github.io/media/posts/18/display-1-2.png" alt="" />
                    Today, we will learn to implement basic form interaction on Google Calendar Add-ons. I assume that you have read my previous post about the basic structure on Google Calendar Add-ons (1) 1. Create Google Apps Script Project Show appsscript.json like what we have done previously,&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://nsulistiyawan.github.io/media/posts/18/display-1-2.png" alt="" />
                <p><br>Today, we will learn to implement basic form interaction on Google Calendar Add-ons. I assume that you have read my previous post about the basic structure on <a href="https://nsulistiyawan.github.io/building-google-calendar-add-ons-1.html">Google Calendar Add-ons (1)</a><br><br><strong>1. <a href="https://script.google.com/home/projects/create">Create Google Apps Script Project </a></strong><br><br>Show appsscript.json  like what we have done previously, then paste the following code</p>
<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;">{
  <span class="hljs-attr">"timeZone"</span>: <span class="hljs-string" style="color: #dd1144;">"America/New_York"</span>,
  <span class="hljs-attr">"dependencies"</span>: {
    
  },
  <span class="hljs-attr">"exceptionLogging"</span>: <span class="hljs-string" style="color: #dd1144;">"STACKDRIVER"</span>,
  <span class="hljs-attr">"runtimeVersion"</span>: <span class="hljs-string" style="color: #dd1144;">"V8"</span>,
  <span class="hljs-attr">"addOns"</span>: {
    <span class="hljs-attr">"calendar"</span>: {
      <span class="hljs-attr">"homepageTrigger"</span>: {
        <span class="hljs-attr">"enabled"</span>: <span class="hljs-literal" style="color: teal;">true</span>,
        <span class="hljs-attr">"runFunction"</span>: <span class="hljs-string" style="color: #dd1144;">"buildHelloCalendarCard"</span>
      }
    },
    <span class="hljs-attr">"common"</span>: {
      <span class="hljs-attr">"name"</span>: <span class="hljs-string" style="color: #dd1144;">"HelloCalendar"</span>,
      <span class="hljs-attr">"logoUrl"</span>: <span class="hljs-string" style="color: #dd1144;">"https://www.gstatic.com/script/apps_script_1x_48dp.png"</span>
    }
  }
}</pre>
<p><strong>2. Create  / Update Code.gs<br><br><br></strong>Create <code>Code.gs</code> in Editor (or just replace with the code below if you already have one)</p>
<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;"><span class="hljs-function"><span class="hljs-keyword" style="color: #333333; font-weight: bold;">function</span> <span class="hljs-title" style="color: #990000; font-weight: bold;">buildHelloCalendarCard</span>() </span>{
  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> card = CardService.newCardBuilder();

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> cardHeader = CardService.newCardHeader();
  cardHeader.setTitle(<span class="hljs-string" style="color: #dd1144;">'Hello Calendar'</span>);

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> userEmail = Session.getActiveUser().getEmail();

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> emailField = CardService.newTextInput();
  emailField.setFieldName(<span class="hljs-string" style="color: #dd1144;">'email'</span>).setHint(<span class="hljs-string" style="color: #dd1144;">'Your email'</span>).setTitle(<span class="hljs-string" style="color: #dd1144;">'Email'</span>).setValue(userEmail);

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> helloAction = CardService.newAction().setFunctionName(<span class="hljs-string" style="color: #dd1144;">'notificationCallback'</span>);

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> helloButton = CardService.newTextButton();
  helloButton.setText(<span class="hljs-string" style="color: #dd1144;">'Say Hello'</span>).setOnClickAction(helloAction);

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> cardSection = CardService.newCardSection();
  cardSection.addWidget(emailField);
  cardSection.addWidget(helloButton);

  card.addSection(cardSection);

  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">return</span> card.build();
}

<span class="hljs-function"><span class="hljs-keyword" style="color: #333333; font-weight: bold;">function</span> <span class="hljs-title" style="color: #990000; font-weight: bold;">notificationCallback</span>(<span class="hljs-params">e</span>) </span>{
  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> helloText = <span class="hljs-string" style="color: #dd1144;">'Hello '</span>+e.formInput.email
  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">return</span> CardService.newActionResponseBuilder()
      .setNotification(CardService.newNotification()
          .setText(helloText))
      .build();
}</pre>
<p>Let's dive in into the code :</p>
<p>We can see in <code>appsscript.json</code> that we will execute <code>buildHelloCalendarCard</code> function whenever user install our extension and open the Google Calendar. <br><br>Look at this line :</p>
<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;"><span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> userEmail = <span class="hljs-type" style="color: #445588; font-weight: bold;">Session</span>.getActiveUser().getEmail();</pre>
<p>We use Google Apps Script <a href="https://developers.google.com/apps-script/reference/base/session#getactiveuser">session helper class</a> to get current user email, and then create a new text field with default value taken from user email. <br><br>Move on the next thing :</p>
<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;"><span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> helloAction = CardService.newAction().setFunctionName(<span class="hljs-string" style="color: #dd1144;">'notificationCallback'</span>);

<span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> helloButton = CardService.newTextButton();
helloButton.setText(<span class="hljs-string" style="color: #dd1144;">'Say Hello'</span>).setOnClickAction(helloAction);</pre>
<p>We create a new  <code>Say Hello</code> button, and attach an action listener into the button. By doing that, whenever user click a <code>Say Hello</code> button, it will call <code>notificationCallback</code> function.</p>
<pre class="hljs" style="display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;"><span class="hljs-function"><span class="hljs-keyword" style="color: #333333; font-weight: bold;">function</span> <span class="hljs-title" style="color: #990000; font-weight: bold;">notificationCallback</span><span class="hljs-params">(e)</span> </span>{
  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">var</span> helloText = <span class="hljs-string" style="color: #dd1144;">'Hello '</span>+e.formInput.email
  <span class="hljs-keyword" style="color: #333333; font-weight: bold;">return</span> CardService.newActionResponseBuilder()
      .setNotification(CardService.newNotification()
          .setText(helloText))
      .build();
}</pre>
<p>On <code>notificationCallback</code> function, we will read email input value, and then show a notification growl to current user. <br><br>You can see there's an <code>e</code> object passed in our action callback, we can see a-lot-of information from this event object. You can check <a href="https://developers.google.com/workspace/add-ons/concepts/event-objects">the documentation to see all of them.</a><br><strong><br>3. Deploy, run the extension in Google Calendar</strong></p>
<figure class="post__image"><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/18/display-1.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-md.png 768w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-1-2xl.png 1600w"  alt="" width="730" height="434"></figure>
<figure class="post__image">Click Say Hello<br><img loading="lazy"  src="https://nsulistiyawan.github.io/media/posts/18/display-2.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-xs.png 300w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-sm.png 480w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-md.png 768w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-lg.png 1024w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-xl.png 1360w ,https://nsulistiyawan.github.io/media/posts/18/responsive/display-2-2xl.png 1600w"  alt="" width="705" height="358"></figure><br><br>That's all for basic form interaction using Google App Script.</p>
            ]]>
        </content>
    </entry>
</feed>
